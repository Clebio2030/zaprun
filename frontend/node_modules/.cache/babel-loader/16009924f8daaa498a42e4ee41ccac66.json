{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _redux = require(\"redux\");\nvar _reactRedux = require(\"react-redux\");\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\nclass Lane extends _react.Component {\n  constructor() {\n    super(...arguments);\n    (0, _defineProperty2.default)(this, \"state\", {\n      loading: false,\n      currentPage: this.props.currentPage,\n      addCardMode: false,\n      collapsed: false,\n      isDraggingOver: false\n    });\n    (0, _defineProperty2.default)(this, \"handleScroll\", evt => {\n      const node = evt.target;\n      const elemScrollPosition = node.scrollHeight - node.scrollTop - node.clientHeight;\n      const onLaneScroll = this.props.onLaneScroll; // In some browsers and/or screen sizes a decimal rest value between 0 and 1 exists, so it should be checked on < 1 instead of < 0\n\n      if (elemScrollPosition < 1 && onLaneScroll && !this.state.loading) {\n        const currentPage = this.state.currentPage;\n        this.setState({\n          loading: true\n        });\n        const nextPage = currentPage + 1;\n        onLaneScroll(nextPage, this.props.id).then(moreCards => {\n          if ((moreCards || []).length > 0) {\n            this.props.actions.paginateLane({\n              laneId: this.props.id,\n              newCards: moreCards,\n              nextPage: nextPage\n            });\n          }\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"laneDidMount\", node => {\n      if (node) {\n        node.addEventListener('scroll', this.handleScroll);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"removeCard\", cardId => {\n      if (this.props.onBeforeCardDelete && typeof this.props.onBeforeCardDelete === 'function') {\n        this.props.onBeforeCardDelete(() => {\n          this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n          this.props.actions.removeCard({\n            laneId: this.props.id,\n            cardId: cardId\n          });\n        });\n      } else {\n        this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n        this.props.actions.removeCard({\n          laneId: this.props.id,\n          cardId: cardId\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"handleCardClick\", (e, card) => {\n      const onCardClick = this.props.onCardClick;\n      onCardClick && onCardClick(card.id, card.metadata, card.laneId);\n      e.stopPropagation();\n    });\n    (0, _defineProperty2.default)(this, \"showEditableCard\", () => {\n      this.setState({\n        addCardMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableCard\", () => {\n      this.setState({\n        addCardMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewCard\", params => {\n      const laneId = this.props.id;\n      const id = (0, _v.default)();\n      this.hideEditableCard();\n      let card = (0, _objectSpread2.default)({\n        id\n      }, params);\n      this.props.actions.addCard({\n        laneId,\n        card\n      });\n      this.props.onCardAdd(card, laneId);\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", _ref => {\n      let {\n        payload\n      } = _ref;\n      const handleDragStart = this.props.handleDragStart;\n      handleDragStart && handleDragStart(payload.id, payload.laneId);\n    });\n    (0, _defineProperty2.default)(this, \"shouldAcceptDrop\", sourceContainerOptions => {\n      return this.props.droppable && sourceContainerOptions.groupName === this.groupName;\n    });\n    (0, _defineProperty2.default)(this, \"onDragEnd\", (laneId, result) => {\n      const handleDragEnd = this.props.handleDragEnd;\n      const addedIndex = result.addedIndex,\n        payload = result.payload;\n      if (this.state.isDraggingOver) {\n        this.setState({\n          isDraggingOver: false\n        });\n      }\n      if (addedIndex != null) {\n        const newCard = (0, _objectSpread2.default)({}, (0, _cloneDeep.default)(payload), {\n          laneId\n        });\n        const response = handleDragEnd ? handleDragEnd(payload.id, payload.laneId, laneId, addedIndex, newCard) : true;\n        if (response === undefined || !!response) {\n          this.props.actions.moveCardAcrossLanes({\n            fromLaneId: payload.laneId,\n            toLaneId: laneId,\n            cardId: payload.id,\n            index: addedIndex\n          });\n          this.props.onCardMoveAcrossLanes(payload.laneId, laneId, payload.id, addedIndex);\n        }\n        return response;\n      }\n    });\n    (0, _defineProperty2.default)(this, \"updateCard\", updatedCard => {\n      this.props.actions.updateCard({\n        laneId: this.props.id,\n        card: updatedCard\n      });\n      this.props.onCardUpdate(this.props.id, updatedCard);\n    });\n    (0, _defineProperty2.default)(this, \"renderDragContainer\", isDraggingOver => {\n      const _this$props = this.props,\n        id = _this$props.id,\n        cards = _this$props.cards,\n        laneSortFunction = _this$props.laneSortFunction,\n        editable = _this$props.editable,\n        hideCardDeleteIcon = _this$props.hideCardDeleteIcon,\n        cardDraggable = _this$props.cardDraggable,\n        cardDragClass = _this$props.cardDragClass,\n        cardDropClass = _this$props.cardDropClass,\n        tagStyle = _this$props.tagStyle,\n        cardStyle = _this$props.cardStyle,\n        components = _this$props.components,\n        t = _this$props.t;\n      const _this$state = this.state,\n        addCardMode = _this$state.addCardMode,\n        collapsed = _this$state.collapsed;\n      const showableCards = collapsed ? [] : cards;\n      const cardList = this.sortCards(showableCards, laneSortFunction).map((card, idx) => {\n        const onDeleteCard = () => this.removeCard(card.id);\n        const cardToRender = _react.default.createElement(components.Card, (0, _extends2.default)({\n          key: card.id,\n          index: idx,\n          style: card.style || cardStyle,\n          className: \"react-trello-card\",\n          onDelete: onDeleteCard,\n          onClick: e => this.handleCardClick(e, card),\n          onChange: updatedCard => this.updateCard(updatedCard),\n          showDeleteButton: !hideCardDeleteIcon,\n          tagStyle: tagStyle,\n          cardDraggable: cardDraggable,\n          editable: editable,\n          t: t\n        }, card));\n        return cardDraggable && (!card.hasOwnProperty('draggable') || card.draggable) ? _react.default.createElement(_Draggable.default, {\n          key: card.id\n        }, cardToRender) : _react.default.createElement(\"span\", {\n          key: card.id\n        }, cardToRender);\n      });\n      return _react.default.createElement(components.ScrollableLane, {\n        ref: this.laneDidMount,\n        isDraggingOver: isDraggingOver\n      }, _react.default.createElement(_Container.default, {\n        orientation: \"vertical\",\n        groupName: this.groupName,\n        dragClass: cardDragClass,\n        dropClass: cardDropClass,\n        onDragStart: this.onDragStart,\n        onDrop: e => this.onDragEnd(id, e),\n        onDragEnter: () => this.setState({\n          isDraggingOver: true\n        }),\n        onDragLeave: () => this.setState({\n          isDraggingOver: false\n        }),\n        shouldAcceptDrop: this.shouldAcceptDrop,\n        getChildPayload: index => this.props.getCardDetails(id, index)\n      }, cardList), editable && !addCardMode && _react.default.createElement(components.AddCardLink, {\n        onClick: this.showEditableCard,\n        t: t,\n        laneId: id\n      }), addCardMode && _react.default.createElement(components.NewCardForm, {\n        onCancel: this.hideEditableCard,\n        t: t,\n        laneId: id,\n        onAdd: this.addNewCard\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"removeLane\", () => {\n      const id = this.props.id;\n      this.props.actions.removeLane({\n        laneId: id\n      });\n      this.props.onLaneDelete(id);\n    });\n    (0, _defineProperty2.default)(this, \"updateTitle\", value => {\n      this.props.actions.updateLane({\n        id: this.props.id,\n        title: value\n      });\n      this.props.onLaneUpdate(this.props.id, {\n        title: value\n      });\n    });\n    (0, _defineProperty2.default)(this, \"renderHeader\", pickedProps => {\n      const components = this.props.components;\n      return _react.default.createElement(components.LaneHeader, (0, _extends2.default)({}, pickedProps, {\n        onDelete: this.removeLane,\n        onDoubleClick: this.toggleLaneCollapsed,\n        updateTitle: this.updateTitle\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"toggleLaneCollapsed\", () => {\n      this.props.collapsibleLanes && this.setState(state => ({\n        collapsed: !state.collapsed\n      }));\n    });\n  }\n  sortCards(cards, sortFunction) {\n    if (!cards) return [];\n    if (!sortFunction) return cards;\n    return cards.concat().sort(function (card1, card2) {\n      return sortFunction(card1, card2);\n    });\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _isEqual.default)(this.props.cards, nextProps.cards)) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n    }\n  }\n  get groupName() {\n    const boardId = this.props.boardId;\n    return \"TrelloBoard\".concat(boardId, \"Lane\");\n  }\n  render() {\n    const _this$state2 = this.state,\n      loading = _this$state2.loading,\n      isDraggingOver = _this$state2.isDraggingOver,\n      collapsed = _this$state2.collapsed;\n    const _this$props2 = this.props,\n      id = _this$props2.id,\n      cards = _this$props2.cards,\n      collapsibleLanes = _this$props2.collapsibleLanes,\n      components = _this$props2.components,\n      onLaneClick = _this$props2.onLaneClick,\n      onLaneScroll = _this$props2.onLaneScroll,\n      onCardClick = _this$props2.onCardClick,\n      onCardAdd = _this$props2.onCardAdd,\n      onBeforeCardDelete = _this$props2.onBeforeCardDelete,\n      onCardDelete = _this$props2.onCardDelete,\n      onLaneDelete = _this$props2.onLaneDelete,\n      onLaneUpdate = _this$props2.onLaneUpdate,\n      onCardUpdate = _this$props2.onCardUpdate,\n      onCardMoveAcrossLanes = _this$props2.onCardMoveAcrossLanes,\n      otherProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"id\", \"cards\", \"collapsibleLanes\", \"components\", \"onLaneClick\", \"onLaneScroll\", \"onCardClick\", \"onCardAdd\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneDelete\", \"onLaneUpdate\", \"onCardUpdate\", \"onCardMoveAcrossLanes\"]);\n    const allClassNames = (0, _classnames.default)('react-trello-lane', this.props.className || '');\n    const showFooter = collapsibleLanes && cards.length > 0;\n    return _react.default.createElement(components.Section, (0, _extends2.default)({}, otherProps, {\n      key: id,\n      onClick: () => onLaneClick && onLaneClick(id),\n      draggable: false,\n      className: allClassNames\n    }), this.renderHeader((0, _objectSpread2.default)({\n      id,\n      cards\n    }, otherProps)), this.renderDragContainer(isDraggingOver), loading && _react.default.createElement(components.Loader, null), showFooter && _react.default.createElement(components.LaneFooter, {\n      onClick: this.toggleLaneCollapsed,\n      collapsed: collapsed\n    }));\n  }\n}\nLane.propTypes = {\n  actions: _propTypes.default.object,\n  id: _propTypes.default.string.isRequired,\n  boardId: _propTypes.default.string,\n  title: _propTypes.default.node,\n  index: _propTypes.default.number,\n  laneSortFunction: _propTypes.default.func,\n  style: _propTypes.default.object,\n  cardStyle: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  titleStyle: _propTypes.default.object,\n  labelStyle: _propTypes.default.object,\n  cards: _propTypes.default.array,\n  label: _propTypes.default.string,\n  currentPage: _propTypes.default.number,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  droppable: _propTypes.default.bool,\n  onCardMoveAcrossLanes: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  editable: _propTypes.default.bool,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  cardDropClass: _propTypes.default.string,\n  canAddLanes: _propTypes.default.bool,\n  t: _propTypes.default.func.isRequired\n};\nLane.defaultProps = {\n  style: {},\n  titleStyle: {},\n  labelStyle: {},\n  label: undefined,\n  editable: false,\n  onLaneUpdate: () => {},\n  onCardAdd: () => {},\n  onCardUpdate: () => {}\n};\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)(laneActions, dispatch)\n});\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Lane);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectWithoutProperties2","_extends2","_objectSpread2","_defineProperty2","_react","_classnames","_propTypes","_redux","_reactRedux","_isEqual","_cloneDeep","_pick","_v","_Container","_Draggable","laneActions","Lane","Component","constructor","arguments","loading","currentPage","props","addCardMode","collapsed","isDraggingOver","evt","node","target","elemScrollPosition","scrollHeight","scrollTop","clientHeight","onLaneScroll","state","setState","nextPage","id","then","moreCards","length","actions","paginateLane","laneId","newCards","addEventListener","handleScroll","cardId","onBeforeCardDelete","onCardDelete","removeCard","e","card","onCardClick","metadata","stopPropagation","params","hideEditableCard","addCard","onCardAdd","_ref","payload","handleDragStart","sourceContainerOptions","droppable","groupName","result","handleDragEnd","addedIndex","newCard","response","undefined","moveCardAcrossLanes","fromLaneId","toLaneId","index","onCardMoveAcrossLanes","updatedCard","updateCard","onCardUpdate","_this$props","cards","laneSortFunction","editable","hideCardDeleteIcon","cardDraggable","cardDragClass","cardDropClass","tagStyle","cardStyle","components","t","_this$state","showableCards","cardList","sortCards","map","idx","onDeleteCard","cardToRender","createElement","Card","key","style","className","onDelete","onClick","handleCardClick","onChange","showDeleteButton","hasOwnProperty","draggable","ScrollableLane","ref","laneDidMount","orientation","dragClass","dropClass","onDragStart","onDrop","onDragEnd","onDragEnter","onDragLeave","shouldAcceptDrop","getChildPayload","getCardDetails","AddCardLink","showEditableCard","NewCardForm","onCancel","onAdd","addNewCard","removeLane","onLaneDelete","updateLane","title","onLaneUpdate","pickedProps","LaneHeader","onDoubleClick","toggleLaneCollapsed","updateTitle","collapsibleLanes","sortFunction","concat","sort","card1","card2","UNSAFE_componentWillReceiveProps","nextProps","boardId","render","_this$state2","_this$props2","onLaneClick","otherProps","allClassNames","showFooter","Section","renderHeader","renderDragContainer","Loader","LaneFooter","propTypes","object","string","isRequired","number","func","titleStyle","labelStyle","array","label","bool","laneDraggable","canAddLanes","defaultProps","mapDispatchToProps","dispatch","bindActionCreators","_default","connect"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/node_modules/react-trello/dist/controllers/Lane.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _cloneDeep = _interopRequireDefault(require(\"lodash/cloneDeep\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _v = _interopRequireDefault(require(\"uuid/v1\"));\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass Lane extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      loading: false,\n      currentPage: this.props.currentPage,\n      addCardMode: false,\n      collapsed: false,\n      isDraggingOver: false\n    });\n    (0, _defineProperty2.default)(this, \"handleScroll\", evt => {\n      const node = evt.target;\n      const elemScrollPosition = node.scrollHeight - node.scrollTop - node.clientHeight;\n      const onLaneScroll = this.props.onLaneScroll; // In some browsers and/or screen sizes a decimal rest value between 0 and 1 exists, so it should be checked on < 1 instead of < 0\n\n      if (elemScrollPosition < 1 && onLaneScroll && !this.state.loading) {\n        const currentPage = this.state.currentPage;\n        this.setState({\n          loading: true\n        });\n        const nextPage = currentPage + 1;\n        onLaneScroll(nextPage, this.props.id).then(moreCards => {\n          if ((moreCards || []).length > 0) {\n            this.props.actions.paginateLane({\n              laneId: this.props.id,\n              newCards: moreCards,\n              nextPage: nextPage\n            });\n          }\n\n          this.setState({\n            loading: false\n          });\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"laneDidMount\", node => {\n      if (node) {\n        node.addEventListener('scroll', this.handleScroll);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"removeCard\", cardId => {\n      if (this.props.onBeforeCardDelete && typeof this.props.onBeforeCardDelete === 'function') {\n        this.props.onBeforeCardDelete(() => {\n          this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n          this.props.actions.removeCard({\n            laneId: this.props.id,\n            cardId: cardId\n          });\n        });\n      } else {\n        this.props.onCardDelete && this.props.onCardDelete(cardId, this.props.id);\n        this.props.actions.removeCard({\n          laneId: this.props.id,\n          cardId: cardId\n        });\n      }\n    });\n    (0, _defineProperty2.default)(this, \"handleCardClick\", (e, card) => {\n      const onCardClick = this.props.onCardClick;\n      onCardClick && onCardClick(card.id, card.metadata, card.laneId);\n      e.stopPropagation();\n    });\n    (0, _defineProperty2.default)(this, \"showEditableCard\", () => {\n      this.setState({\n        addCardMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableCard\", () => {\n      this.setState({\n        addCardMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewCard\", params => {\n      const laneId = this.props.id;\n      const id = (0, _v.default)();\n      this.hideEditableCard();\n      let card = (0, _objectSpread2.default)({\n        id\n      }, params);\n      this.props.actions.addCard({\n        laneId,\n        card\n      });\n      this.props.onCardAdd(card, laneId);\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleDragStart = this.props.handleDragStart;\n      handleDragStart && handleDragStart(payload.id, payload.laneId);\n    });\n    (0, _defineProperty2.default)(this, \"shouldAcceptDrop\", sourceContainerOptions => {\n      return this.props.droppable && sourceContainerOptions.groupName === this.groupName;\n    });\n    (0, _defineProperty2.default)(this, \"onDragEnd\", (laneId, result) => {\n      const handleDragEnd = this.props.handleDragEnd;\n      const addedIndex = result.addedIndex,\n            payload = result.payload;\n\n      if (this.state.isDraggingOver) {\n        this.setState({\n          isDraggingOver: false\n        });\n      }\n\n      if (addedIndex != null) {\n        const newCard = (0, _objectSpread2.default)({}, (0, _cloneDeep.default)(payload), {\n          laneId\n        });\n        const response = handleDragEnd ? handleDragEnd(payload.id, payload.laneId, laneId, addedIndex, newCard) : true;\n\n        if (response === undefined || !!response) {\n          this.props.actions.moveCardAcrossLanes({\n            fromLaneId: payload.laneId,\n            toLaneId: laneId,\n            cardId: payload.id,\n            index: addedIndex\n          });\n          this.props.onCardMoveAcrossLanes(payload.laneId, laneId, payload.id, addedIndex);\n        }\n\n        return response;\n      }\n    });\n    (0, _defineProperty2.default)(this, \"updateCard\", updatedCard => {\n      this.props.actions.updateCard({\n        laneId: this.props.id,\n        card: updatedCard\n      });\n      this.props.onCardUpdate(this.props.id, updatedCard);\n    });\n    (0, _defineProperty2.default)(this, \"renderDragContainer\", isDraggingOver => {\n      const _this$props = this.props,\n            id = _this$props.id,\n            cards = _this$props.cards,\n            laneSortFunction = _this$props.laneSortFunction,\n            editable = _this$props.editable,\n            hideCardDeleteIcon = _this$props.hideCardDeleteIcon,\n            cardDraggable = _this$props.cardDraggable,\n            cardDragClass = _this$props.cardDragClass,\n            cardDropClass = _this$props.cardDropClass,\n            tagStyle = _this$props.tagStyle,\n            cardStyle = _this$props.cardStyle,\n            components = _this$props.components,\n            t = _this$props.t;\n      const _this$state = this.state,\n            addCardMode = _this$state.addCardMode,\n            collapsed = _this$state.collapsed;\n      const showableCards = collapsed ? [] : cards;\n      const cardList = this.sortCards(showableCards, laneSortFunction).map((card, idx) => {\n        const onDeleteCard = () => this.removeCard(card.id);\n\n        const cardToRender = _react.default.createElement(components.Card, (0, _extends2.default)({\n          key: card.id,\n          index: idx,\n          style: card.style || cardStyle,\n          className: \"react-trello-card\",\n          onDelete: onDeleteCard,\n          onClick: e => this.handleCardClick(e, card),\n          onChange: updatedCard => this.updateCard(updatedCard),\n          showDeleteButton: !hideCardDeleteIcon,\n          tagStyle: tagStyle,\n          cardDraggable: cardDraggable,\n          editable: editable,\n          t: t\n        }, card));\n\n        return cardDraggable && (!card.hasOwnProperty('draggable') || card.draggable) ? _react.default.createElement(_Draggable.default, {\n          key: card.id\n        }, cardToRender) : _react.default.createElement(\"span\", {\n          key: card.id\n        }, cardToRender);\n      });\n      return _react.default.createElement(components.ScrollableLane, {\n        ref: this.laneDidMount,\n        isDraggingOver: isDraggingOver\n      }, _react.default.createElement(_Container.default, {\n        orientation: \"vertical\",\n        groupName: this.groupName,\n        dragClass: cardDragClass,\n        dropClass: cardDropClass,\n        onDragStart: this.onDragStart,\n        onDrop: e => this.onDragEnd(id, e),\n        onDragEnter: () => this.setState({\n          isDraggingOver: true\n        }),\n        onDragLeave: () => this.setState({\n          isDraggingOver: false\n        }),\n        shouldAcceptDrop: this.shouldAcceptDrop,\n        getChildPayload: index => this.props.getCardDetails(id, index)\n      }, cardList), editable && !addCardMode && _react.default.createElement(components.AddCardLink, {\n        onClick: this.showEditableCard,\n        t: t,\n        laneId: id\n      }), addCardMode && _react.default.createElement(components.NewCardForm, {\n        onCancel: this.hideEditableCard,\n        t: t,\n        laneId: id,\n        onAdd: this.addNewCard\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"removeLane\", () => {\n      const id = this.props.id;\n      this.props.actions.removeLane({\n        laneId: id\n      });\n      this.props.onLaneDelete(id);\n    });\n    (0, _defineProperty2.default)(this, \"updateTitle\", value => {\n      this.props.actions.updateLane({\n        id: this.props.id,\n        title: value\n      });\n      this.props.onLaneUpdate(this.props.id, {\n        title: value\n      });\n    });\n    (0, _defineProperty2.default)(this, \"renderHeader\", pickedProps => {\n      const components = this.props.components;\n      return _react.default.createElement(components.LaneHeader, (0, _extends2.default)({}, pickedProps, {\n        onDelete: this.removeLane,\n        onDoubleClick: this.toggleLaneCollapsed,\n        updateTitle: this.updateTitle\n      }));\n    });\n    (0, _defineProperty2.default)(this, \"toggleLaneCollapsed\", () => {\n      this.props.collapsibleLanes && this.setState(state => ({\n        collapsed: !state.collapsed\n      }));\n    });\n  }\n\n  sortCards(cards, sortFunction) {\n    if (!cards) return [];\n    if (!sortFunction) return cards;\n    return cards.concat().sort(function (card1, card2) {\n      return sortFunction(card1, card2);\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!(0, _isEqual.default)(this.props.cards, nextProps.cards)) {\n      this.setState({\n        currentPage: nextProps.currentPage\n      });\n    }\n  }\n\n  get groupName() {\n    const boardId = this.props.boardId;\n    return \"TrelloBoard\".concat(boardId, \"Lane\");\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          loading = _this$state2.loading,\n          isDraggingOver = _this$state2.isDraggingOver,\n          collapsed = _this$state2.collapsed;\n    const _this$props2 = this.props,\n          id = _this$props2.id,\n          cards = _this$props2.cards,\n          collapsibleLanes = _this$props2.collapsibleLanes,\n          components = _this$props2.components,\n          onLaneClick = _this$props2.onLaneClick,\n          onLaneScroll = _this$props2.onLaneScroll,\n          onCardClick = _this$props2.onCardClick,\n          onCardAdd = _this$props2.onCardAdd,\n          onBeforeCardDelete = _this$props2.onBeforeCardDelete,\n          onCardDelete = _this$props2.onCardDelete,\n          onLaneDelete = _this$props2.onLaneDelete,\n          onLaneUpdate = _this$props2.onLaneUpdate,\n          onCardUpdate = _this$props2.onCardUpdate,\n          onCardMoveAcrossLanes = _this$props2.onCardMoveAcrossLanes,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props2, [\"id\", \"cards\", \"collapsibleLanes\", \"components\", \"onLaneClick\", \"onLaneScroll\", \"onCardClick\", \"onCardAdd\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneDelete\", \"onLaneUpdate\", \"onCardUpdate\", \"onCardMoveAcrossLanes\"]);\n    const allClassNames = (0, _classnames.default)('react-trello-lane', this.props.className || '');\n    const showFooter = collapsibleLanes && cards.length > 0;\n    return _react.default.createElement(components.Section, (0, _extends2.default)({}, otherProps, {\n      key: id,\n      onClick: () => onLaneClick && onLaneClick(id),\n      draggable: false,\n      className: allClassNames\n    }), this.renderHeader((0, _objectSpread2.default)({\n      id,\n      cards\n    }, otherProps)), this.renderDragContainer(isDraggingOver), loading && _react.default.createElement(components.Loader, null), showFooter && _react.default.createElement(components.LaneFooter, {\n      onClick: this.toggleLaneCollapsed,\n      collapsed: collapsed\n    }));\n  }\n\n}\n\nLane.propTypes = {\n  actions: _propTypes.default.object,\n  id: _propTypes.default.string.isRequired,\n  boardId: _propTypes.default.string,\n  title: _propTypes.default.node,\n  index: _propTypes.default.number,\n  laneSortFunction: _propTypes.default.func,\n  style: _propTypes.default.object,\n  cardStyle: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  titleStyle: _propTypes.default.object,\n  labelStyle: _propTypes.default.object,\n  cards: _propTypes.default.array,\n  label: _propTypes.default.string,\n  currentPage: _propTypes.default.number,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  droppable: _propTypes.default.bool,\n  onCardMoveAcrossLanes: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  editable: _propTypes.default.bool,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  cardDropClass: _propTypes.default.string,\n  canAddLanes: _propTypes.default.bool,\n  t: _propTypes.default.func.isRequired\n};\nLane.defaultProps = {\n  style: {},\n  titleStyle: {},\n  labelStyle: {},\n  label: undefined,\n  editable: false,\n  onLaneUpdate: () => {},\n  onCardAdd: () => {},\n  onCardUpdate: () => {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)(laneActions, dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(null, mapDispatchToProps)(Lane);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}