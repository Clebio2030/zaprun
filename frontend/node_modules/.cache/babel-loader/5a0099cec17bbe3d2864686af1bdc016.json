{"ast":null,"code":"import{Chip,Paper,TextField}from\"@material-ui/core\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import React,{useEffect,useRef,useState}from\"react\";import{isArray,isString}from\"lodash\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";export function TagsContainer(_ref){let{contact}=_ref;const[tags,setTags]=useState([]);const[selecteds,setSelecteds]=useState([]);const isMounted=useRef(true);useEffect(()=>{return()=>{isMounted.current=false;};},[]);useEffect(()=>{if(isMounted.current){loadTags().then(()=>{if(Array.isArray(contact.tags)){setSelecteds(contact.tags);}else{setSelecteds([]);}});}},[contact]);const createTag=async data=>{try{const{data:responseData}=await api.post(\"/tags\",data);return responseData;}catch(err){toastError(err);}};const loadTags=async()=>{try{const{data}=await api.get(\"/tags/list\",{params:{kanban:0}});setTags(data);}catch(err){toastError(err);}};const syncTags=async data=>{try{const{data:responseData}=await api.post(\"/tags/sync\",data);return responseData;}catch(err){toastError(err);}};const onChange=async(value,reason)=>{let optionsChanged=[];if(reason==='create-option'){if(isArray(value)){for(let item of value){if(item.length<3){toastError(\"Tag muito curta!\");return;}if(isString(item)){const newTag=await createTag({name:item,kanban:0,color:getRandomHexColor()});optionsChanged.push(newTag);}else{optionsChanged.push(item);}}}await loadTags();}else{optionsChanged=value;}setSelecteds(optionsChanged);await syncTags({contactId:contact.id,tags:optionsChanged});};function getRandomHexColor(){// Gerar valores aleatórios para os componentes de cor\nconst red=Math.floor(Math.random()*256);// Valor entre 0 e 255\nconst green=Math.floor(Math.random()*256);// Valor entre 0 e 255\nconst blue=Math.floor(Math.random()*256);// Valor entre 0 e 255\n// Converter os componentes de cor em uma cor hexadecimal\nconst hexColor=\"#\".concat(red.toString(16).padStart(2,'0')).concat(green.toString(16).padStart(2,'0')).concat(blue.toString(16).padStart(2,'0'));return hexColor;}return/*#__PURE__*/React.createElement(Paper,{style:{padding:2}},/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,size:\"small\",options:tags,value:selecteds,freeSolo:true,onChange:(e,v,r)=>onChange(v,r),getOptionLabel:option=>option.name,renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",style:{backgroundColor:option.color||'#eee',color:\"#FFF\",marginRight:1,padding:1,fontWeight:'bold',paddingLeft:5,paddingRight:5,borderRadius:3,fontSize:\"0.8em\",whiteSpace:\"nowrap\"},label:option.name},getTagProps({index}),{size:\"small\"}))),renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",placeholder:\"Tags\"})),PaperComponent:_ref2=>{let{children}=_ref2;return/*#__PURE__*/React.createElement(Paper,{style:{width:400,marginLeft:6}},children);}}));}","map":{"version":3,"names":["Chip","Paper","TextField","Autocomplete","React","useEffect","useRef","useState","isArray","isString","toastError","api","TagsContainer","_ref","contact","tags","setTags","selecteds","setSelecteds","isMounted","current","loadTags","then","Array","createTag","data","responseData","post","err","get","params","kanban","syncTags","onChange","value","reason","optionsChanged","item","length","newTag","name","color","getRandomHexColor","push","contactId","id","red","Math","floor","random","green","blue","hexColor","concat","toString","padStart","createElement","style","padding","multiple","size","options","freeSolo","e","v","r","getOptionLabel","option","renderTags","getTagProps","map","index","Object","assign","variant","backgroundColor","marginRight","fontWeight","paddingLeft","paddingRight","borderRadius","fontSize","whiteSpace","label","renderInput","placeholder","PaperComponent","_ref2","children","width","marginLeft"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/TagsContainer/index.js"],"sourcesContent":["import { Chip, Paper, TextField } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { isArray, isString } from \"lodash\";\nimport toastError from \"../../errors/toastError\";\nimport api from \"../../services/api\";\n\nexport function TagsContainer({ contact }) {\n\n    const [tags, setTags] = useState([]);\n    const [selecteds, setSelecteds] = useState([]);\n    const isMounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            isMounted.current = false\n        }\n    }, [])\n\n    useEffect(() => {\n        if (isMounted.current) {\n            loadTags().then(() => {\n                if (Array.isArray(contact.tags)) {\n                    setSelecteds(contact.tags);\n                } else {\n                    setSelecteds([]);\n                }\n            });\n        }\n    }, [contact]);\n\n    const createTag = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const loadTags = async () => {\n        try {\n            const { data } = await api.get(`/tags/list`, \n            {params: { kanban: 0}\n        });\n            setTags(data);\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const syncTags = async (data) => {\n        try {\n            const { data: responseData } = await api.post(`/tags/sync`, data);\n            return responseData;\n        } catch (err) {\n            toastError(err);\n        }\n    }\n\n    const onChange = async (value, reason) => {\n        let optionsChanged = []\n        if (reason === 'create-option') {\n            if (isArray(value)) {\n                for (let item of value) {\n                    if (item.length < 3) {\n                        toastError(\"Tag muito curta!\");\n                        return;\n                    }\n                    if (isString(item)) {\n                        const newTag = await createTag({ name: item, kanban: 0, color: getRandomHexColor() })\n                        optionsChanged.push(newTag);\n                    } else {\n                        optionsChanged.push(item);\n                    }\n                }\n            }\n            await loadTags();\n        } else {\n            optionsChanged = value;\n        }\n        setSelecteds(optionsChanged);\n        await syncTags({ contactId: contact.id, tags: optionsChanged });\n    }\n\n    function getRandomHexColor() {\n        // Gerar valores aleatórios para os componentes de cor\n        const red = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n        const green = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n        const blue = Math.floor(Math.random() * 256); // Valor entre 0 e 255\n      \n        // Converter os componentes de cor em uma cor hexadecimal\n        const hexColor = `#${red.toString(16).padStart(2, '0')}${green.toString(16).padStart(2, '0')}${blue.toString(16).padStart(2, '0')}`;\n      \n        return hexColor;\n    }\n\n    return (\n        <Paper style={{ padding: 2 }}>\n            <Autocomplete\n                multiple\n                size=\"small\"\n                options={tags}\n                value={selecteds}\n                freeSolo\n                onChange={(e, v, r) => onChange(v, r)}\n                getOptionLabel={(option) => option.name}\n                renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                        <Chip\n                            variant=\"outlined\"\n                            style={{\n                                backgroundColor: option.color || '#eee',\n                                color: \"#FFF\",\n                                marginRight: 1,\n                                padding: 1,\n                                fontWeight: 'bold',\n                                paddingLeft: 5,\n                                paddingRight: 5,\n                                borderRadius: 3,\n                                fontSize: \"0.8em\",\n                                whiteSpace: \"nowrap\"\n                            }}\n                            label={option.name}\n                            {...getTagProps({ index })}\n                            size=\"small\"\n                        />\n                    ))\n                }\n                renderInput={(params) => (\n                    <TextField {...params} variant=\"outlined\" placeholder=\"Tags\" />\n                )}\n                PaperComponent={({ children }) => (\n                    <Paper\n                        style={{ width: 400, marginLeft: 6 }}\n                    >\n                        {children}\n                    </Paper>\n                )}\n            />\n        </Paper>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}