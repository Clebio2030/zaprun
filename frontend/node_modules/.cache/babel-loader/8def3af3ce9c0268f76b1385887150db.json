{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import*as Yup from\"yup\";import{Formik,Form,Field}from\"formik\";import{toast}from\"react-toastify\";import{makeStyles}from\"@material-ui/core/styles\";import{green}from\"@material-ui/core/colors\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",flexWrap:\"wrap\"},multFieldLine:{display:\"flex\",\"& > *:not(:last-child)\":{marginRight:theme.spacing(1)}},btnWrapper:{position:\"relative\"},buttonProgress:{color:green[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12},formControl:{margin:theme.spacing(1),minWidth:120}}));const ContactListSchema=Yup.object().shape({name:Yup.string().min(2,\"Too Short!\").max(50,\"Too Long!\").required(\"Required\")});const ContactListModal=_ref=>{let{open,onClose,contactListId}=_ref;const classes=useStyles();const initialState={name:\"\"};const[contactList,setContactList]=useState(initialState);useEffect(()=>{const fetchContactList=async()=>{if(!contactListId)return;try{const{data}=await api.get(\"/contact-lists/\".concat(contactListId));setContactList(prevState=>{return{...prevState,...data};});}catch(err){toastError(err);}};fetchContactList();},[contactListId,open]);const handleClose=()=>{onClose();setContactList(initialState);};const handleSaveContactList=async values=>{const contactListData={...values};try{if(contactListId){await api.put(\"/contact-lists/\".concat(contactListId),contactListData);}else{await api.post(\"/contact-lists\",contactListData);}toast.success(i18n.t(\"contactList.dialog\"));}catch(err){toastError(err);}handleClose();};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Dialog,{open:open,onClose:handleClose,maxWidth:\"xs\",fullWidth:true,scroll:\"paper\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},contactListId?\"\".concat(i18n.t(\"contactLists.dialog.edit\")):\"\".concat(i18n.t(\"contactLists.dialog.add\"))),/*#__PURE__*/React.createElement(Formik,{initialValues:contactList,enableReinitialize:true,validationSchema:ContactListSchema,onSubmit:(values,actions)=>{setTimeout(()=>{handleSaveContactList(values);actions.setSubmitting(false);},400);}},_ref2=>{let{touched,errors,isSubmitting}=_ref2;return/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(\"div\",{className:classes.multFieldLine},/*#__PURE__*/React.createElement(Field,{as:TextField,label:i18n.t(\"contactLists.dialog.name\"),autoFocus:true,name:\"name\",error:touched.name&&Boolean(errors.name),helperText:touched.name&&errors.name,variant:\"outlined\",margin:\"dense\",fullWidth:true}))),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",disabled:isSubmitting,variant:\"outlined\"},i18n.t(\"contactLists.dialog.cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",disabled:isSubmitting,variant:\"contained\",className:classes.btnWrapper},contactListId?\"\".concat(i18n.t(\"contactLists.dialog.okEdit\")):\"\".concat(i18n.t(\"contactLists.dialog.okAdd\")),isSubmitting&&/*#__PURE__*/React.createElement(CircularProgress,{size:24,className:classes.buttonProgress}))));})));};export default ContactListModal;","map":{"version":3,"names":["React","useState","useEffect","Yup","Formik","Form","Field","toast","makeStyles","green","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","CircularProgress","i18n","api","toastError","useStyles","theme","root","display","flexWrap","multFieldLine","marginRight","spacing","btnWrapper","position","buttonProgress","color","top","left","marginTop","marginLeft","formControl","margin","minWidth","ContactListSchema","object","shape","name","string","min","max","required","ContactListModal","_ref","open","onClose","contactListId","classes","initialState","contactList","setContactList","fetchContactList","data","get","concat","prevState","err","handleClose","handleSaveContactList","values","contactListData","put","post","success","t","createElement","className","maxWidth","fullWidth","scroll","id","initialValues","enableReinitialize","validationSchema","onSubmit","actions","setTimeout","setSubmitting","_ref2","touched","errors","isSubmitting","dividers","as","label","autoFocus","error","Boolean","helperText","variant","onClick","disabled","type","size"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/ContactListDialog/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { i18n } from \"../../translate/i18n\";\r\n\r\nimport api from \"../../services/api\";\r\nimport toastError from \"../../errors/toastError\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  multFieldLine: {\r\n    display: \"flex\",\r\n    \"& > *:not(:last-child)\": {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  },\r\n\r\n  btnWrapper: {\r\n    position: \"relative\",\r\n  },\r\n\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n}));\r\n\r\nconst ContactListSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nconst ContactListModal = ({ open, onClose, contactListId }) => {\r\n  const classes = useStyles();\r\n\r\n  const initialState = {\r\n    name: \"\",\r\n  };\r\n\r\n  const [contactList, setContactList] = useState(initialState);\r\n\r\n  useEffect(() => {\r\n    const fetchContactList = async () => {\r\n      if (!contactListId) return;\r\n      try {\r\n        const { data } = await api.get(`/contact-lists/${contactListId}`);\r\n        setContactList((prevState) => {\r\n          return { ...prevState, ...data };\r\n        });\r\n      } catch (err) {\r\n        toastError(err);\r\n      }\r\n    };\r\n\r\n    fetchContactList();\r\n  }, [contactListId, open]);\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setContactList(initialState);\r\n  };\r\n\r\n  const handleSaveContactList = async (values) => {\r\n    const contactListData = { ...values };\r\n    try {\r\n      if (contactListId) {\r\n        await api.put(`/contact-lists/${contactListId}`, contactListData);\r\n      } else {\r\n        await api.post(\"/contact-lists\", contactListData);\r\n      }\r\n      toast.success(i18n.t(\"contactList.dialog\"));\r\n    } catch (err) {\r\n      toastError(err);\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        maxWidth=\"xs\"\r\n        fullWidth\r\n        scroll=\"paper\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          {contactListId\r\n            ? `${i18n.t(\"contactLists.dialog.edit\")}`\r\n            : `${i18n.t(\"contactLists.dialog.add\")}`}\r\n        </DialogTitle>\r\n        <Formik\r\n          initialValues={contactList}\r\n          enableReinitialize={true}\r\n          validationSchema={ContactListSchema}\r\n          onSubmit={(values, actions) => {\r\n            setTimeout(() => {\r\n              handleSaveContactList(values);\r\n              actions.setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({ touched, errors, isSubmitting }) => (\r\n            <Form>\r\n              <DialogContent dividers>\r\n                <div className={classes.multFieldLine}>\r\n                  <Field\r\n                    as={TextField}\r\n                    label={i18n.t(\"contactLists.dialog.name\")}\r\n                    autoFocus\r\n                    name=\"name\"\r\n                    error={touched.name && Boolean(errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                    variant=\"outlined\"\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                  />\r\n                </div>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button\r\n                  onClick={handleClose}\r\n                  color=\"secondary\"\r\n                  disabled={isSubmitting}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {i18n.t(\"contactLists.dialog.cancel\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  variant=\"contained\"\r\n                  className={classes.btnWrapper}\r\n                >\r\n                  {contactListId\r\n                    ? `${i18n.t(\"contactLists.dialog.okEdit\")}`\r\n                    : `${i18n.t(\"contactLists.dialog.okAdd\")}`}\r\n                  {isSubmitting && (\r\n                    <CircularProgress\r\n                      size={24}\r\n                      className={classes.buttonProgress}\r\n                    />\r\n                  )}\r\n                </Button>\r\n              </DialogActions>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactListModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}