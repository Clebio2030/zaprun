{"ast":null,"code":"import{useState,useEffect}from\"react\";import toastError from\"../../errors/toastError\";import api from\"../../services/api\";const useMessages=_ref=>{let{fromMe,dateStart,dateEnd}=_ref;const[loading,setLoading]=useState(true);const[count,setCount]=useState(0);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchMessages=async()=>{try{const{data}=await api.get(\"/messages-allMe\",{params:{fromMe,dateStart,dateEnd}});setCount(data.count[0].count);setLoading(false);}catch(err){setLoading(false);toastError(err);}};fetchMessages();},500);return()=>clearTimeout(delayDebounceFn);},[dateStart,dateEnd]);return{count};};export default useMessages;","map":{"version":3,"names":["useState","useEffect","toastError","api","useMessages","_ref","fromMe","dateStart","dateEnd","loading","setLoading","count","setCount","delayDebounceFn","setTimeout","fetchMessages","data","get","params","err","clearTimeout"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/hooks/useMessages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport toastError from \"../../errors/toastError\";\r\n\r\nimport api from \"../../services/api\";\r\n\r\nconst useMessages = ({ fromMe, dateStart, dateEnd }) => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const delayDebounceFn = setTimeout(() => {\r\n            const fetchMessages = async () => {\r\n                try {\r\n                    const { data } = await api.get(\"/messages-allMe\", {\r\n                        params: {\r\n                            fromMe,\r\n                            dateStart,\r\n                            dateEnd,\r\n                        },\r\n                    });\r\n                    setCount(data.count[0].count);\r\n                    setLoading(false);\r\n                } catch (err) {\r\n                    setLoading(false);\r\n                    toastError(err);\r\n                }\r\n            };\r\n\r\n            fetchMessages();\r\n        }, 500);\r\n        return () => clearTimeout(delayDebounceFn);\r\n    }, [dateStart, dateEnd]);\r\n\r\n    return { count };\r\n};\r\n\r\nexport default useMessages;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAEhD,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAEpC,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAoC,IAAnC,CAAEC,MAAM,CAAEC,SAAS,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CAC/C,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,CAAC,CAAC,CAErCC,SAAS,CAAC,IAAM,CACZS,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAG,eAAe,CAAGC,UAAU,CAAC,IAAM,CACrC,KAAM,CAAAC,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACA,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAb,GAAG,CAACc,GAAG,CAAC,iBAAiB,CAAE,CAC9CC,MAAM,CAAE,CACJZ,MAAM,CACNC,SAAS,CACTC,OACJ,CACJ,CAAC,CAAC,CACFI,QAAQ,CAACI,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,CAC7BD,UAAU,CAAC,KAAK,CAAC,CACrB,CAAE,MAAOS,GAAG,CAAE,CACVT,UAAU,CAAC,KAAK,CAAC,CACjBR,UAAU,CAACiB,GAAG,CAAC,CACnB,CACJ,CAAC,CAEDJ,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,GAAG,CAAC,CACP,MAAO,IAAMK,YAAY,CAACP,eAAe,CAAC,CAC9C,CAAC,CAAE,CAACN,SAAS,CAAEC,OAAO,CAAC,CAAC,CAExB,MAAO,CAAEG,KAAM,CAAC,CACpB,CAAC,CAED,cAAe,CAAAP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}