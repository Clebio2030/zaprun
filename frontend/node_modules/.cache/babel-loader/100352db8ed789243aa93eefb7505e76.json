{"ast":null,"code":"import{Box,Chip,TextField}from\"@material-ui/core\";import Autocomplete from\"@material-ui/lab/Autocomplete\";import React,{useEffect,useState}from\"react\";import{i18n}from\"../../translate/i18n\";export function StatusFilter(_ref){let{onFiltered}=_ref;const[selecteds,setSelecteds]=useState([]);useEffect(()=>{async function fetchData(){}fetchData();},[]);const onChange=async value=>{setSelecteds(value);onFiltered(value);};const status=[{status:'open',name:\"\".concat(i18n.t(\"tickets.search.filterConectionsOptions.open\"))},{status:'closed',name:\"\".concat(i18n.t(\"tickets.search.filterConectionsOptions.closed\"))},{status:'pending',name:\"\".concat(i18n.t(\"tickets.search.filterConectionsOptions.pending\"))},{status:'group',name:'Grupos'}];return/*#__PURE__*/React.createElement(Box,{style:{padding:\"0px 10px 10px\"}},/*#__PURE__*/React.createElement(Autocomplete,{multiple:true,size:\"small\",options:status,value:selecteds,onChange:(e,v,r)=>onChange(v),getOptionLabel:option=>option.name,renderTags:(value,getTagProps)=>value.map((option,index)=>/*#__PURE__*/React.createElement(Chip,Object.assign({variant:\"outlined\",style:{backgroundColor:option.color||\"#eee\",textShadow:\"1px 1px 1px #000\",color:\"white\"},label:option.name},getTagProps({index}),{size:\"small\"}))),renderInput:params=>/*#__PURE__*/React.createElement(TextField,Object.assign({},params,{variant:\"outlined\",placeholder:\"Filtro por Status\"}))}));}","map":{"version":3,"names":["Box","Chip","TextField","Autocomplete","React","useEffect","useState","i18n","StatusFilter","_ref","onFiltered","selecteds","setSelecteds","fetchData","onChange","value","status","name","concat","t","createElement","style","padding","multiple","size","options","e","v","r","getOptionLabel","option","renderTags","getTagProps","map","index","Object","assign","variant","backgroundColor","color","textShadow","label","renderInput","params","placeholder"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/StatusFilter/index.js"],"sourcesContent":["import { Box, Chip, TextField } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { i18n } from \"../../translate/i18n\";\r\n\r\n\r\nexport function StatusFilter({ onFiltered }) {\r\n  const [selecteds, setSelecteds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      \r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onChange = async (value) => {\r\n    setSelecteds(value);\r\n    onFiltered(value);\r\n  };\r\n\r\n  const status = [\r\n    { status: 'open', name: `${i18n.t(\"tickets.search.filterConectionsOptions.open\")}` },\r\n    { status: 'closed', name: `${i18n.t(\"tickets.search.filterConectionsOptions.closed\")}` },\r\n    { status: 'pending', name: `${i18n.t(\"tickets.search.filterConectionsOptions.pending\")}` },\r\n    { status: 'group', name: 'Grupos' },\r\n\r\n  ]\r\n\r\n  return (\r\n    <Box style={{ padding: \"0px 10px 10px\" }}>\r\n      <Autocomplete \r\n       multiple      \r\n       size=\"small\"\r\n       options={status}\r\n       value={selecteds}\r\n       onChange={(e, v, r) => onChange(v)}\r\n       getOptionLabel={(option) => option.name}\r\n       renderTags={(value, getTagProps) =>\r\n         value.map((option, index) => (\r\n           <Chip\r\n             variant=\"outlined\"\r\n             style={{\r\n               backgroundColor: option.color || \"#eee\",\r\n               textShadow: \"1px 1px 1px #000\",\r\n               color: \"white\",\r\n             }}\r\n             label={option.name}\r\n             {...getTagProps({ index })}\r\n             size=\"small\"\r\n           />\r\n         ))\r\n       }\r\n       renderInput={(params) => (\r\n         <TextField\r\n           {...params}\r\n           variant=\"outlined\"\r\n           placeholder=\"Filtro por Status\"\r\n         />\r\n       )}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAASA,GAAG,CAAEC,IAAI,CAAEC,SAAS,KAAQ,mBAAmB,CACxD,MAAO,CAAAC,YAAY,KAAM,+BAA+B,CACxD,MAAO,CAAAC,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,sBAAsB,CAG3C,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAAiB,IAAhB,CAAEC,UAAW,CAAC,CAAAD,IAAA,CACzC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAE9CD,SAAS,CAAC,IAAM,CACd,cAAe,CAAAQ,SAASA,CAAA,CAAG,CAE3B,CACAA,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,KAAK,EAAK,CAChCH,YAAY,CAACG,KAAK,CAAC,CACnBL,UAAU,CAACK,KAAK,CAAC,CACnB,CAAC,CAED,KAAM,CAAAC,MAAM,CAAG,CACb,CAAEA,MAAM,CAAE,MAAM,CAAEC,IAAI,IAAAC,MAAA,CAAKX,IAAI,CAACY,CAAC,CAAC,6CAA6C,CAAC,CAAG,CAAC,CACpF,CAAEH,MAAM,CAAE,QAAQ,CAAEC,IAAI,IAAAC,MAAA,CAAKX,IAAI,CAACY,CAAC,CAAC,+CAA+C,CAAC,CAAG,CAAC,CACxF,CAAEH,MAAM,CAAE,SAAS,CAAEC,IAAI,IAAAC,MAAA,CAAKX,IAAI,CAACY,CAAC,CAAC,gDAAgD,CAAC,CAAG,CAAC,CAC1F,CAAEH,MAAM,CAAE,OAAO,CAAEC,IAAI,CAAE,QAAS,CAAC,CAEpC,CAED,mBACEb,KAAA,CAAAgB,aAAA,CAACpB,GAAG,EAACqB,KAAK,CAAE,CAAEC,OAAO,CAAE,eAAgB,CAAE,eACvClB,KAAA,CAAAgB,aAAA,CAACjB,YAAY,EACZoB,QAAQ,MACRC,IAAI,CAAC,OAAO,CACZC,OAAO,CAAET,MAAO,CAChBD,KAAK,CAAEJ,SAAU,CACjBG,QAAQ,CAAEA,CAACY,CAAC,CAAEC,CAAC,CAAEC,CAAC,GAAKd,QAAQ,CAACa,CAAC,CAAE,CACnCE,cAAc,CAAGC,MAAM,EAAKA,MAAM,CAACb,IAAK,CACxCc,UAAU,CAAEA,CAAChB,KAAK,CAAEiB,WAAW,GAC7BjB,KAAK,CAACkB,GAAG,CAAC,CAACH,MAAM,CAAEI,KAAK,gBACtB9B,KAAA,CAAAgB,aAAA,CAACnB,IAAI,CAAAkC,MAAA,CAAAC,MAAA,EACHC,OAAO,CAAC,UAAU,CAClBhB,KAAK,CAAE,CACLiB,eAAe,CAAER,MAAM,CAACS,KAAK,EAAI,MAAM,CACvCC,UAAU,CAAE,kBAAkB,CAC9BD,KAAK,CAAE,OACT,CAAE,CACFE,KAAK,CAAEX,MAAM,CAACb,IAAK,EACfe,WAAW,CAAC,CAAEE,KAAM,CAAC,CAAC,EAC1BV,IAAI,CAAC,OAAO,EACb,CACF,CACF,CACDkB,WAAW,CAAGC,MAAM,eAClBvC,KAAA,CAAAgB,aAAA,CAAClB,SAAS,CAAAiC,MAAA,CAAAC,MAAA,IACJO,MAAM,EACVN,OAAO,CAAC,UAAU,CAClBO,WAAW,CAAC,mBAAmB,EAChC,CACD,CACF,CACE,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}