{"ast":null,"code":"import{FormatMask}from'./FormatMask';const formatSerializedId=serializedId=>{var _formatMask$setPhoneF;const formatMask=new FormatMask();const number=serializedId===null||serializedId===void 0?void 0:serializedId.replace('@c.us','');return(_formatMask$setPhoneF=formatMask.setPhoneFormatMask(number))===null||_formatMask$setPhoneF===void 0?void 0:_formatMask$setPhoneF.replace('+55','ðŸ‡§ðŸ‡·');};export default formatSerializedId;","map":{"version":3,"names":["FormatMask","formatSerializedId","serializedId","_formatMask$setPhoneF","formatMask","number","replace","setPhoneFormatMask"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/utils/formatSerializedId.js"],"sourcesContent":["import { FormatMask } from './FormatMask';\n\nconst formatSerializedId = (serializedId) => {\n  const formatMask = new FormatMask();\n  const number = serializedId?.replace('@c.us', '');\n\n  return formatMask.setPhoneFormatMask(number)?.replace('+55', 'ðŸ‡§ðŸ‡·');\n};\n\nexport default formatSerializedId;\n"],"mappings":"AAAA,OAASA,UAAU,KAAQ,cAAc,CAEzC,KAAM,CAAAC,kBAAkB,CAAIC,YAAY,EAAK,KAAAC,qBAAA,CAC3C,KAAM,CAAAC,UAAU,CAAG,GAAI,CAAAJ,UAAU,CAAC,CAAC,CACnC,KAAM,CAAAK,MAAM,CAAGH,YAAY,SAAZA,YAAY,iBAAZA,YAAY,CAAEI,OAAO,CAAC,OAAO,CAAE,EAAE,CAAC,CAEjD,OAAAH,qBAAA,CAAOC,UAAU,CAACG,kBAAkB,CAACF,MAAM,CAAC,UAAAF,qBAAA,iBAArCA,qBAAA,CAAuCG,OAAO,CAAC,KAAK,CAAE,MAAM,CAAC,CACtE,CAAC,CAED,cAAe,CAAAL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module"}