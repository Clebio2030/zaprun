{"ast":null,"code":"import api from\"../../services/api\";const useTicketNotes=()=>{const saveNote=async data=>{const{data:responseData}=await api.request({url:'/ticket-notes',method:'POST',data});return responseData;};const editNote=async data=>{const{data:responseData}=await api.request({url:\"/ticket-notes/\".concat(data.id),method:'POST',data});return responseData;};const deleteNote=async id=>{const{data}=await api.request({url:\"/ticket-notes/\".concat(id),method:'DELETE'});return data;};const listNotes=async params=>{const{data}=await api.request({url:'/ticket-notes/list',method:'GET',params});return data;};return{saveNote,deleteNote,listNotes};};export default useTicketNotes;","map":{"version":3,"names":["api","useTicketNotes","saveNote","data","responseData","request","url","method","editNote","concat","id","deleteNote","listNotes","params"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/hooks/useTicketNotes/index.js"],"sourcesContent":["import api from \"../../services/api\";\n\nconst useTicketNotes = () => {\n\n    const saveNote = async (data) => {\n        const { data: responseData } = await api.request({\n            url: '/ticket-notes',\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const editNote = async (data) => {\n        const { data: responseData } = await api.request({\n            url: `/ticket-notes/${data.id}`,\n            method: 'POST',\n            data\n        });\n        return responseData;\n    }\n\n    const deleteNote = async (id) => {\n        const { data } = await api.request({\n            url: `/ticket-notes/${id}`,\n            method: 'DELETE'\n        });\n        return data;\n    }\n\n    const listNotes = async (params) => {\n        const { data } = await api.request({\n            url: '/ticket-notes/list',\n            method: 'GET',\n            params\n        });\n        return data;\n    }\n\n    return {\n        saveNote,\n        deleteNote,\n        listNotes\n    }\n}\n\nexport default useTicketNotes;"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,oBAAoB,CAEpC,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAEzB,KAAM,CAAAC,QAAQ,CAAG,KAAO,CAAAC,IAAI,EAAK,CAC7B,KAAM,CAAEA,IAAI,CAAEC,YAAa,CAAC,CAAG,KAAM,CAAAJ,GAAG,CAACK,OAAO,CAAC,CAC7CC,GAAG,CAAE,eAAe,CACpBC,MAAM,CAAE,MAAM,CACdJ,IACJ,CAAC,CAAC,CACF,MAAO,CAAAC,YAAY,CACvB,CAAC,CAED,KAAM,CAAAI,QAAQ,CAAG,KAAO,CAAAL,IAAI,EAAK,CAC7B,KAAM,CAAEA,IAAI,CAAEC,YAAa,CAAC,CAAG,KAAM,CAAAJ,GAAG,CAACK,OAAO,CAAC,CAC7CC,GAAG,kBAAAG,MAAA,CAAmBN,IAAI,CAACO,EAAE,CAAE,CAC/BH,MAAM,CAAE,MAAM,CACdJ,IACJ,CAAC,CAAC,CACF,MAAO,CAAAC,YAAY,CACvB,CAAC,CAED,KAAM,CAAAO,UAAU,CAAG,KAAO,CAAAD,EAAE,EAAK,CAC7B,KAAM,CAAEP,IAAK,CAAC,CAAG,KAAM,CAAAH,GAAG,CAACK,OAAO,CAAC,CAC/BC,GAAG,kBAAAG,MAAA,CAAmBC,EAAE,CAAE,CAC1BH,MAAM,CAAE,QACZ,CAAC,CAAC,CACF,MAAO,CAAAJ,IAAI,CACf,CAAC,CAED,KAAM,CAAAS,SAAS,CAAG,KAAO,CAAAC,MAAM,EAAK,CAChC,KAAM,CAAEV,IAAK,CAAC,CAAG,KAAM,CAAAH,GAAG,CAACK,OAAO,CAAC,CAC/BC,GAAG,CAAE,oBAAoB,CACzBC,MAAM,CAAE,KAAK,CACbM,MACJ,CAAC,CAAC,CACF,MAAO,CAAAV,IAAI,CACf,CAAC,CAED,MAAO,CACHD,QAAQ,CACRS,UAAU,CACVC,SACJ,CAAC,CACL,CAAC,CAED,cAAe,CAAAX,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}