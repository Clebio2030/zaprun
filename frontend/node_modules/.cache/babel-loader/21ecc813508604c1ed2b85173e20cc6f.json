{"ast":null,"code":"import React,{useState,useEffect}from'react';import YouTube from'react-youtube';const YouTubePreview=_ref=>{let{videoUrl}=_ref;const[videoId,setVideoId]=useState('');useEffect(()=>{// Extract the video ID from the URL\nlet videoId=videoUrl.split('v=')[1];if(!videoId){const match=videoUrl.match(/(?:youtu\\.be\\/)([^?\\n]+)/);videoId=match?match[1]:null;}let ampersandPosition=videoId.indexOf('&');if(ampersandPosition!=-1){videoId=videoId.substring(0,ampersandPosition);}setVideoId(videoId);},[videoUrl]);const opts={height:'300',width:'100%'};return/*#__PURE__*/React.createElement(\"div\",null,videoId&&/*#__PURE__*/React.createElement(YouTube,{videoId:videoId,opts:opts,style:{borderRadius:10,overflow:'hidden'}}));};export default YouTubePreview;","map":{"version":3,"names":["React","useState","useEffect","YouTube","YouTubePreview","_ref","videoUrl","videoId","setVideoId","split","match","ampersandPosition","indexOf","substring","opts","height","width","createElement","style","borderRadius","overflow"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/ModalYoutubeCors/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst YouTubePreview = ({ videoUrl }) => {\r\n  const [videoId, setVideoId] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Extract the video ID from the URL\r\n    let videoId = videoUrl.split('v=')[1];\r\n\r\n    if (!videoId) {\r\n      const match = videoUrl.match(/(?:youtu\\.be\\/)([^?\\n]+)/);\r\n      videoId = match ? match[1] : null;\r\n\r\n    }\r\n\r\n    let ampersandPosition = videoId.indexOf('&');\r\n\r\n    if (ampersandPosition != -1) {\r\n      videoId = videoId.substring(0, ampersandPosition);\r\n    }\r\n    \r\n    setVideoId(videoId);\r\n  }, [videoUrl]);\r\n\r\n  const opts = {\r\n    height: '300',\r\n    width: '100%',\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {videoId && <YouTube videoId={videoId} opts={opts} style={{ borderRadius: 10, overflow: 'hidden' }} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YouTubePreview;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,OAAO,KAAM,eAAe,CAEnC,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACd;AACA,GAAI,CAAAK,OAAO,CAAGD,QAAQ,CAACG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAErC,GAAI,CAACF,OAAO,CAAE,CACZ,KAAM,CAAAG,KAAK,CAAGJ,QAAQ,CAACI,KAAK,CAAC,0BAA0B,CAAC,CACxDH,OAAO,CAAGG,KAAK,CAAGA,KAAK,CAAC,CAAC,CAAC,CAAG,IAAI,CAEnC,CAEA,GAAI,CAAAC,iBAAiB,CAAGJ,OAAO,CAACK,OAAO,CAAC,GAAG,CAAC,CAE5C,GAAID,iBAAiB,EAAI,CAAC,CAAC,CAAE,CAC3BJ,OAAO,CAAGA,OAAO,CAACM,SAAS,CAAC,CAAC,CAAEF,iBAAiB,CAAC,CACnD,CAEAH,UAAU,CAACD,OAAO,CAAC,CACrB,CAAC,CAAE,CAACD,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAQ,IAAI,CAAG,CACXC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,MACT,CAAC,CAED,mBACEhB,KAAA,CAAAiB,aAAA,YACGV,OAAO,eAAIP,KAAA,CAAAiB,aAAA,CAACd,OAAO,EAACI,OAAO,CAAEA,OAAQ,CAACO,IAAI,CAAEA,IAAK,CAACI,KAAK,CAAE,CAAEC,YAAY,CAAE,EAAE,CAAEC,QAAQ,CAAE,QAAS,CAAE,CAAE,CAClG,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}