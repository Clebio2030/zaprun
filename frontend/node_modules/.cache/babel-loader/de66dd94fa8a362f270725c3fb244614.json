{"ast":null,"code":"import React,{useState,useRef}from\"react\";import Popover from\"@material-ui/core/Popover\";import IconButton from\"@material-ui/core/IconButton\";import List from\"@material-ui/core/List\";import{makeStyles}from\"@material-ui/core/styles\";import VolumeUpIcon from\"@material-ui/icons/VolumeUp\";import VolumeDownIcon from\"@material-ui/icons/VolumeDown\";import{Grid,Slider}from\"@material-ui/core\";const useStyles=makeStyles(theme=>({tabContainer:{padding:theme.spacing(2)},popoverPaper:{width:\"100%\",maxWidth:350,marginLeft:theme.spacing(2),marginRight:theme.spacing(1),[theme.breakpoints.down(\"sm\")]:{maxWidth:270}},noShadow:{boxShadow:\"none !important\"},icons:{color:\"#fff\"},customBadge:{backgroundColor:\"#f44336\",color:\"#fff\"}}));const NotificationsVolume=_ref=>{let{volume,setVolume}=_ref;const classes=useStyles();const anchorEl=useRef();const[isOpen,setIsOpen]=useState(false);const handleClick=()=>{setIsOpen(prevState=>!prevState);};const handleClickAway=()=>{setIsOpen(false);};const handleVolumeChange=value=>{setVolume(value);localStorage.setItem(\"volume\",value);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{className:classes.icons,onClick:handleClick,ref:anchorEl,\"aria-label\":\"Open Notifications\"// color=\"inherit\"\n// color=\"secondary\"\n},/*#__PURE__*/React.createElement(VolumeUpIcon,{color:\"inherit\"})),/*#__PURE__*/React.createElement(Popover,{disableScrollLock:true,open:isOpen,anchorEl:anchorEl.current,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},classes:{paper:classes.popoverPaper},onClose:handleClickAway},/*#__PURE__*/React.createElement(List,{dense:true,className:classes.tabContainer},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(VolumeDownIcon,null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},/*#__PURE__*/React.createElement(Slider,{value:Number(volume),\"aria-labelledby\":\"continuous-slider\",step:0.1,min:0,max:1,onChange:(e,value)=>handleVolumeChange(value)})),/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(VolumeUpIcon,null))))));};export default NotificationsVolume;","map":{"version":3,"names":["React","useState","useRef","Popover","IconButton","List","makeStyles","VolumeUpIcon","VolumeDownIcon","Grid","Slider","useStyles","theme","tabContainer","padding","spacing","popoverPaper","width","maxWidth","marginLeft","marginRight","breakpoints","down","noShadow","boxShadow","icons","color","customBadge","backgroundColor","NotificationsVolume","_ref","volume","setVolume","classes","anchorEl","isOpen","setIsOpen","handleClick","prevState","handleClickAway","handleVolumeChange","value","localStorage","setItem","createElement","Fragment","className","onClick","ref","disableScrollLock","open","current","anchorOrigin","vertical","horizontal","transformOrigin","paper","onClose","dense","container","item","xs","Number","step","min","max","onChange","e"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/NotificationsVolume/index.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport VolumeUpIcon from \"@material-ui/icons/VolumeUp\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\n\r\nimport { Grid, Slider } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tabContainer: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    popoverPaper: {\r\n        width: \"100%\",\r\n        maxWidth: 350,\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(1),\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 270,\r\n        },\r\n    },\r\n    noShadow: {\r\n        boxShadow: \"none !important\",\r\n    },\r\n    icons: {\r\n        color: \"#fff\",\r\n    },\r\n    customBadge: {\r\n        backgroundColor: \"#f44336\",\r\n        color: \"#fff\",\r\n    },\r\n}));\r\n\r\nconst NotificationsVolume = ({ volume, setVolume }) => {\r\n    const classes = useStyles();\r\n\r\n    const anchorEl = useRef();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleClick = () => {\r\n        setIsOpen((prevState) => !prevState);\r\n    };\r\n\r\n    const handleClickAway = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const handleVolumeChange = (value) => {\r\n        setVolume(value);\r\n        localStorage.setItem(\"volume\", value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                className={classes.icons}\r\n                onClick={handleClick}\r\n                ref={anchorEl}\r\n                aria-label=\"Open Notifications\"\r\n                // color=\"inherit\"\r\n                // color=\"secondary\"\r\n            >\r\n                <VolumeUpIcon color=\"inherit\" />\r\n            </IconButton>\r\n            <Popover\r\n                disableScrollLock\r\n                open={isOpen}\r\n                anchorEl={anchorEl.current}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"right\",\r\n                }}\r\n                classes={{ paper: classes.popoverPaper }}\r\n                onClose={handleClickAway}\r\n            >\r\n                <List dense className={classes.tabContainer}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item>\r\n                            <VolumeDownIcon />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                            <Slider\r\n                                value={Number(volume)}\r\n                                aria-labelledby=\"continuous-slider\"\r\n                                step={0.1}\r\n                                min={0}\r\n                                max={1}\r\n                                onChange={(e, value) =>\r\n                                    handleVolumeChange(value)\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <VolumeUpIcon />\r\n                        </Grid>\r\n                    </Grid>\r\n                </List>\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NotificationsVolume;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}