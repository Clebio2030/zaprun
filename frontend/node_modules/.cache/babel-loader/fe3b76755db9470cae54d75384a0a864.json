{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import*as Yup from\"yup\";import{Formik,FieldArray,Form,Field}from\"formik\";import{toast}from\"react-toastify\";import{makeStyles}from\"@material-ui/core/styles\";import{green}from\"@material-ui/core/colors\";import Button from\"@material-ui/core/Button\";import TextField from\"@material-ui/core/TextField\";import Dialog from\"@material-ui/core/Dialog\";import DialogActions from\"@material-ui/core/DialogActions\";import DialogContent from\"@material-ui/core/DialogContent\";import DialogTitle from\"@material-ui/core/DialogTitle\";import Typography from\"@material-ui/core/Typography\";import IconButton from\"@material-ui/core/IconButton\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import CircularProgress from\"@material-ui/core/CircularProgress\";import{i18n}from\"../../translate/i18n\";import api from\"../../services/api\";import toastError from\"../../errors/toastError\";import{Stack}from\"@mui/material\";const useStyles=makeStyles(theme=>({root:{display:\"flex\",flexWrap:\"wrap\"},textField:{marginRight:theme.spacing(1),flex:1},extraAttr:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\"},btnWrapper:{position:\"relative\"},buttonProgress:{color:green[500],position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}}));const ContactSchema=Yup.object().shape({name:Yup.string().min(2,\"Muito curto!\").max(50,\"Muito longo!\").required(\"Digite um nome!\"),text:Yup.string().min(2,\"Muito curto!\").max(50,\"Muito longo!\").required(\"Digite uma mensagem!\")});const FlowBuilderAddTextModal=_ref=>{let{open,onSave,onUpdate,data,close}=_ref;const classes=useStyles();const isMounted=useRef(true);const[activeModal,setActiveModal]=useState(false);const[labels,setLabels]=useState({title:\"Adicionar mensagem ao fluxo\",btn:\"Adicionar\"});const[textDig,setTextDig]=useState();useEffect(()=>{if(open===\"edit\"){setLabels({title:\"Editar mensagem ao fluxo\",btn:\"Salvar\"});setTextDig(data.data.label);setActiveModal(true);}else if(open===\"create\"){setLabels({title:\"Adicionar mensagem ao fluxo\",btn:\"Adicionar\"});setTextDig(\"\");setActiveModal(true);}else{setActiveModal(false);}},[open]);useEffect(()=>{return()=>{isMounted.current=false;};},[]);const handleClose=()=>{close(null);setActiveModal(false);};const handleSaveContact=async()=>{if(open===\"edit\"){handleClose();onUpdate({...data,data:{label:textDig}});return;}else if(open===\"create\"){handleClose();onSave({text:textDig});}};return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(Dialog,{open:activeModal,onClose:handleClose,fullWidth:\"md\",scroll:\"paper\"},/*#__PURE__*/React.createElement(DialogTitle,{id:\"form-dialog-title\"},labels.title),/*#__PURE__*/React.createElement(Stack,null,/*#__PURE__*/React.createElement(DialogContent,{dividers:true},/*#__PURE__*/React.createElement(TextField,{label:\"Mensagem\",multiline:true,rows:7,name:\"text\",variant:\"outlined\",value:textDig,margin:\"dense\",onChange:e=>setTextDig(e.target.value),className:classes.textField,style:{width:\"95%\"}})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:handleClose,color:\"secondary\",variant:\"outlined\"},i18n.t(\"contactModal.buttons.cancel\")),/*#__PURE__*/React.createElement(Button,{type:\"submit\",color:\"primary\",variant:\"contained\",className:classes.btnWrapper,onClick:()=>handleSaveContact()},\"\".concat(labels.btn))))));};export default FlowBuilderAddTextModal;","map":{"version":3,"names":["React","useState","useEffect","useRef","Yup","Formik","FieldArray","Form","Field","toast","makeStyles","green","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Typography","IconButton","DeleteOutlineIcon","CircularProgress","i18n","api","toastError","Stack","useStyles","theme","root","display","flexWrap","textField","marginRight","spacing","flex","extraAttr","justifyContent","alignItems","btnWrapper","position","buttonProgress","color","top","left","marginTop","marginLeft","ContactSchema","object","shape","name","string","min","max","required","text","FlowBuilderAddTextModal","_ref","open","onSave","onUpdate","data","close","classes","isMounted","activeModal","setActiveModal","labels","setLabels","title","btn","textDig","setTextDig","label","current","handleClose","handleSaveContact","createElement","className","onClose","fullWidth","scroll","id","dividers","multiline","rows","variant","value","margin","onChange","e","target","style","width","onClick","t","type","concat"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/FlowBuilderAddTextModal/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport * as Yup from \"yup\";\r\nimport { Formik, FieldArray, Form, Field } from \"formik\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { i18n } from \"../../translate/i18n\";\r\n\r\nimport api from \"../../services/api\";\r\nimport toastError from \"../../errors/toastError\";\r\nimport { Stack } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginRight: theme.spacing(1),\r\n    flex: 1\r\n  },\r\n\r\n  extraAttr: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n\r\n  btnWrapper: {\r\n    position: \"relative\"\r\n  },\r\n\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12\r\n  }\r\n}));\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Muito curto!\")\r\n    .max(50, \"Muito longo!\")\r\n    .required(\"Digite um nome!\"),\r\n  text: Yup.string()\r\n    .min(2, \"Muito curto!\")\r\n    .max(50, \"Muito longo!\")\r\n    .required(\"Digite uma mensagem!\")\r\n});\r\n\r\nconst FlowBuilderAddTextModal = ({ open, onSave, onUpdate, data, close }) => {\r\n  const classes = useStyles();\r\n  const isMounted = useRef(true);\r\n\r\n  const [activeModal, setActiveModal] = useState(false);\r\n\r\n  const [labels, setLabels] = useState({\r\n    title: \"Adicionar mensagem ao fluxo\",\r\n    btn: \"Adicionar\"\r\n  });\r\n\r\n  const [textDig, setTextDig] = useState();\r\n\r\n  useEffect(() => {\r\n    if (open === \"edit\") {\r\n      setLabels({\r\n        title: \"Editar mensagem ao fluxo\",\r\n        btn: \"Salvar\"\r\n      });\r\n      setTextDig(data.data.label);\r\n      setActiveModal(true);\r\n    } else if (open === \"create\") {\r\n      setLabels({\r\n        title: \"Adicionar mensagem ao fluxo\",\r\n        btn: \"Adicionar\"\r\n      });\r\n      setTextDig(\"\");\r\n      setActiveModal(true);\r\n    } else {\r\n      setActiveModal(false);\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    close(null)\r\n    setActiveModal(false);\r\n  };\r\n\r\n  const handleSaveContact = async () => {\r\n    if (open === \"edit\") {\r\n      handleClose();\r\n      onUpdate({\r\n        ...data,\r\n        data: { label: textDig }\r\n      });\r\n      return;\r\n    } else if (open === \"create\") {\r\n      handleClose();\r\n      onSave({\r\n        text: textDig\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Dialog\r\n        open={activeModal}\r\n        onClose={handleClose}\r\n        fullWidth=\"md\"\r\n        scroll=\"paper\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">{labels.title}</DialogTitle>\r\n        <Stack>\r\n          <DialogContent dividers>\r\n            <TextField\r\n              label={\"Mensagem\"}\r\n              multiline\r\n              rows={7}\r\n              name=\"text\"\r\n              variant=\"outlined\"\r\n              value={textDig}\r\n              margin=\"dense\"\r\n              onChange={e => setTextDig(e.target.value)}\r\n              className={classes.textField}\r\n              style={{ width: \"95%\" }}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"secondary\" variant=\"outlined\">\r\n              {i18n.t(\"contactModal.buttons.cancel\")}\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              className={classes.btnWrapper}\r\n              onClick={() => handleSaveContact()}\r\n            >\r\n              {`${labels.btn}`}\r\n            </Button>\r\n          </DialogActions>\r\n        </Stack>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlowBuilderAddTextModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}