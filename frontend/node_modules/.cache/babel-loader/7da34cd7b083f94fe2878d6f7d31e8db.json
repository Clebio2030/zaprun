{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext,useRef}from\"react\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";import Button from\"@material-ui/core/Button\";import Avatar from\"@material-ui/core/Avatar\";import{Facebook,Instagram,WhatsApp}from\"@material-ui/icons\";import SearchIcon from\"@material-ui/icons/Search\";import TextField from\"@material-ui/core/TextField\";import InputAdornment from\"@material-ui/core/InputAdornment\";import IconButton from\"@material-ui/core/IconButton\";import DeleteOutlineIcon from\"@material-ui/icons/DeleteOutline\";import EditIcon from\"@material-ui/icons/Edit\";import CheckCircleIcon from\"@material-ui/icons/CheckCircle\";import CancelIcon from\"@material-ui/icons/Cancel\";import BlockIcon from\"@material-ui/icons/Block\";import api from\"../../services/api\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import ContactModal from\"../../components/ContactModal\";import ConfirmationModal from\"../../components/ConfirmationModal\";import{i18n}from\"../../translate/i18n\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import MainHeaderButtonsWrapper from\"../../components/MainHeaderButtonsWrapper\";import MainContainer from\"../../components/MainContainer\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{Can}from\"../../components/Can\";import NewTicketModal from\"../../components/NewTicketModal\";import{TagsFilter}from\"../../components/TagsFilter\";import PopupState,{bindTrigger,bindMenu}from\"material-ui-popup-state\";import formatSerializedId from'../../utils/formatSerializedId';import{v4 as uuidv4}from\"uuid\";import{ArrowDropDown,Backup,ContactPhone}from\"@material-ui/icons\";import{Menu,MenuItem}from\"@material-ui/core\";import ContactImportWpModal from\"../../components/ContactImportWpModal\";import useCompanySettings from\"../../hooks/useSettings/companySettings\";import{TicketsContext}from\"../../context/Tickets/TicketsContext\";const reducer=(state,action)=>{if(action.type===\"LOAD_CONTACTS\"){const contacts=action.payload;const newContacts=[];contacts.forEach(contact=>{const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;}else{newContacts.push(contact);}});return[...state,...newContacts];}if(action.type===\"UPDATE_CONTACTS\"){const contact=action.payload;const contactIndex=state.findIndex(c=>c.id===contact.id);if(contactIndex!==-1){state[contactIndex]=contact;return[...state];}else{return[contact,...state];}}if(action.type===\"DELETE_CONTACT\"){const contactId=action.payload;const contactIndex=state.findIndex(c=>c.id===contactId);if(contactIndex!==-1){state.splice(contactIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const Contacts=()=>{const classes=useStyles();const history=useHistory();//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);const[loading,setLoading]=useState(false);const[pageNumber,setPageNumber]=useState(1);const[searchParam,setSearchParam]=useState(\"\");const[contacts,dispatch]=useReducer(reducer,[]);const[selectedContactId,setSelectedContactId]=useState(null);const[contactModalOpen,setContactModalOpen]=useState(false);const[importContactModalOpen,setImportContactModalOpen]=useState(false);const[deletingContact,setDeletingContact]=useState(null);const[ImportContacts,setImportContacts]=useState(null);const[blockingContact,setBlockingContact]=useState(null);const[unBlockingContact,setUnBlockingContact]=useState(null);const[confirmOpen,setConfirmOpen]=useState(false);const[exportContact,setExportContact]=useState(false);const[confirmChatsOpen,setConfirmChatsOpen]=useState(false);const[hasMore,setHasMore]=useState(false);const[newTicketModalOpen,setNewTicketModalOpen]=useState(false);const[contactTicket,setContactTicket]=useState({});const fileUploadRef=useRef(null);const[selectedTags,setSelectedTags]=useState([]);const{setCurrentTicket}=useContext(TicketsContext);const[importWhatsappId,setImportWhatsappId]=useState();const{getAll:getAllSettings}=useCompanySettings();const[hideNum,setHideNum]=useState(false);const[enableLGPD,setEnableLGPD]=useState(false);useEffect(()=>{async function fetchData(){const settingList=await getAllSettings(user.companyId);for(const[key,value]of Object.entries(settingList)){if(key===\"enableLGPD\")setEnableLGPD(value===\"enabled\");if(key===\"lgpdHideNumber\")setHideNum(value===\"enabled\");}// if (settingHideNumber.lgpdHideNumber === \"enabled\") {\n//     setHideNum(true);\n// }\n}fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const handleImportExcel=async()=>{try{const formData=new FormData();formData.append(\"file\",fileUploadRef.current.files[0]);await api.request({url:\"/contacts/upload\",method:\"POST\",data:formData});history.go(0);}catch(err){toastError(err);}};useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam,selectedTags]);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchContacts=async()=>{try{const{data}=await api.get(\"/contacts/\",{params:{searchParam,pageNumber,contactTag:JSON.stringify(selectedTags)}});dispatch({type:\"LOAD_CONTACTS\",payload:data.contacts});setHasMore(data.hasMore);setLoading(false);}catch(err){toastError(err);}};fetchContacts();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber,selectedTags]);useEffect(()=>{const companyId=user.companyId;//    const socket = socketManager.GetSocket();\nconst onContactEvent=data=>{if(data.action===\"update\"||data.action===\"create\"){dispatch({type:\"UPDATE_CONTACTS\",payload:data.contact});}if(data.action===\"delete\"){dispatch({type:\"DELETE_CONTACT\",payload:+data.contactId});}};socket.on(\"company-\".concat(companyId,\"-contact\"),onContactEvent);return()=>{socket.off(\"company-\".concat(companyId,\"-contact\"),onContactEvent);};},[socket]);const handleSelectTicket=ticket=>{const code=uuidv4();const{id,uuid}=ticket;setCurrentTicket({id,uuid,code});};const handleCloseOrOpenTicket=ticket=>{setNewTicketModalOpen(false);if(ticket!==undefined&&ticket.uuid!==undefined){handleSelectTicket(ticket);history.push(\"/tickets/\".concat(ticket.uuid));}};const handleSelectedTags=selecteds=>{const tags=selecteds.map(t=>t.id);setSelectedTags(tags);};const handleSearch=event=>{setSearchParam(event.target.value.toLowerCase());};const handleOpenContactModal=()=>{setSelectedContactId(null);setContactModalOpen(true);};const handleCloseContactModal=()=>{setSelectedContactId(null);setContactModalOpen(false);};const hadleEditContact=contactId=>{setSelectedContactId(contactId);setContactModalOpen(true);};const handleDeleteContact=async contactId=>{try{await api.delete(\"/contacts/\".concat(contactId));toast.success(i18n.t(\"contacts.toasts.deleted\"));}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);};const handleBlockContact=async contactId=>{try{await api.put(\"/contacts/block/\".concat(contactId),{active:false});toast.success(\"Contato bloqueado\");}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);setBlockingContact(null);};const handleUnBlockContact=async contactId=>{try{await api.put(\"/contacts/block/\".concat(contactId),{active:true});toast.success(\"Contato desbloqueado\");}catch(err){toastError(err);}setDeletingContact(null);setSearchParam(\"\");setPageNumber(1);setUnBlockingContact(null);};const onSave=whatsappId=>{setImportWhatsappId(whatsappId);};const handleimportContact=async()=>{setImportContactModalOpen(false);try{await api.post(\"/contacts/import\",{whatsappId:importWhatsappId});history.go(0);setImportContactModalOpen(false);}catch(err){toastError(err);setImportContactModalOpen(false);}};const handleimportChats=async()=>{try{await api.post(\"/contacts/import/chats\");history.go(0);}catch(err){toastError(err);}};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};// function getDateLastMessage(contact) {\n//     if (!contact) return null;\n//     if (!contact.tickets) return null;\n//     if (contact.tickets.length > 0) {\n//         const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n//         const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n//         const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n//         const year = date.getFullYear();\n//         const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n//         const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n//         return `${day}/${month}/${year} ${hours}:${minutes}`;\n//     }\n//     return null;\n// }\nreturn/*#__PURE__*/React.createElement(MainContainer,{className:classes.mainContainer},/*#__PURE__*/React.createElement(NewTicketModal,{modalOpen:newTicketModalOpen,initialContact:contactTicket,onClose:ticket=>{handleCloseOrOpenTicket(ticket);}}),/*#__PURE__*/React.createElement(ContactModal,{open:contactModalOpen,onClose:handleCloseContactModal,\"aria-labelledby\":\"form-dialog-title\",contactId:selectedContactId}),/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.deleteTitle\"),\" \").concat(deletingContact.name,\"?\"):blockingContact?\"Bloquear Contato \".concat(blockingContact.name,\"?\"):unBlockingContact?\"Desbloquear Contato \".concat(unBlockingContact.name,\"?\"):ImportContacts?\"\".concat(i18n.t(\"contacts.confirmationModal.importTitlte\")):\"\".concat(i18n.t(\"contactListItems.confirmationModal.importTitlte\")),onSave:onSave,isCellPhone:ImportContacts,open:confirmOpen,onClose:setConfirmOpen,onConfirm:e=>deletingContact?handleDeleteContact(deletingContact.id):blockingContact?handleBlockContact(blockingContact.id):unBlockingContact?handleUnBlockContact(unBlockingContact.id):ImportContacts?handleimportContact():handleImportExcel()},exportContact?\"\".concat(i18n.t(\"contacts.confirmationModal.exportContact\")):deletingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.deleteMessage\")):blockingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.blockContact\")):unBlockingContact?\"\".concat(i18n.t(\"contacts.confirmationModal.unblockContact\")):ImportContacts?\"Escolha de qual conex\\xE3o deseja importar\":\"\".concat(i18n.t(\"contactListItems.confirmationModal.importMessage\"))),/*#__PURE__*/React.createElement(ConfirmationModal,{title:i18n.t(\"contacts.confirmationModal.importChat\"),open:confirmChatsOpen,onClose:setConfirmChatsOpen,onConfirm:e=>handleimportChats()},i18n.t(\"contacts.confirmationModal.wantImport\")),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,i18n.t(\"contacts.title\"),\" (\",contacts.length,\")\"),/*#__PURE__*/React.createElement(MainHeaderButtonsWrapper,null,/*#__PURE__*/React.createElement(TagsFilter,{onFiltered:handleSelectedTags}),/*#__PURE__*/React.createElement(TextField,{placeholder:i18n.t(\"contacts.searchPlaceholder\"),type:\"search\",value:searchParam,onChange:handleSearch,InputProps:{startAdornment:/*#__PURE__*/React.createElement(InputAdornment,{position:\"start\"},/*#__PURE__*/React.createElement(SearchIcon,{color:\"secondary\"}))}}),/*#__PURE__*/React.createElement(PopupState,{variant:\"popover\",popupId:\"demo-popup-menu\"},popupState=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,Object.assign({variant:\"contained\",color:\"primary\"},bindTrigger(popupState)),\"Importar / Exportar\",/*#__PURE__*/React.createElement(ArrowDropDown,null)),/*#__PURE__*/React.createElement(Menu,bindMenu(popupState),/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>{setConfirmOpen(true);setImportContacts(true);popupState.close();}},/*#__PURE__*/React.createElement(ContactPhone,{fontSize:\"small\",color:\"primary\",style:{marginRight:10}}),i18n.t(\"contacts.menu.importYourPhone\")),/*#__PURE__*/React.createElement(MenuItem,{onClick:()=>{setImportContactModalOpen(true);}},/*#__PURE__*/React.createElement(Backup,{fontSize:\"small\",color:\"primary\",style:{marginRight:10}}),i18n.t(\"contacts.menu.importToExcel\"))))),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",color:\"primary\",onClick:handleOpenContactModal},i18n.t(\"contacts.buttons.add\")))),importContactModalOpen&&/*#__PURE__*/React.createElement(ContactImportWpModal,{isOpen:importContactModalOpen,handleClose:()=>setImportContactModalOpen(false),selectedTags:selectedTags,hideNum:hideNum,userProfile:user.profile}),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\",onScroll:handleScroll},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{style:{display:\"none\"},id:\"upload\",name:\"file\",type:\"file\",accept:\".xls,.xlsx\",onChange:()=>{setConfirmOpen(true);},ref:fileUploadRef})),/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{padding:\"checkbox\"}),/*#__PURE__*/React.createElement(TableCell,null,i18n.t(\"contacts.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.whatsapp\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.email\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.whatsapp\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Status\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"contacts.table.actions\")))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,contacts.map(contact=>{var _formatSerializedId,_contact$number,_contact$whatsapp;return/*#__PURE__*/React.createElement(TableRow,{key:contact.id},/*#__PURE__*/React.createElement(TableCell,{style:{paddingRight:0}},/*#__PURE__*/React.createElement(Avatar,{src:\"\".concat(contact===null||contact===void 0?void 0:contact.urlPicture)})),/*#__PURE__*/React.createElement(TableCell,null,contact.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},enableLGPD&&hideNum&&user.profile===\"user\"?contact.isGroup?contact.number:formatSerializedId(contact===null||contact===void 0?void 0:contact.number)===null?contact.number.slice(0,-6)+\"**-**\"+(contact===null||contact===void 0?void 0:contact.number.slice(-2)):((_formatSerializedId=formatSerializedId(contact===null||contact===void 0?void 0:contact.number))===null||_formatSerializedId===void 0?void 0:_formatSerializedId.slice(0,-6))+\"**-**\"+(contact===null||contact===void 0?void 0:(_contact$number=contact.number)===null||_contact$number===void 0?void 0:_contact$number.slice(-2)):contact.isGroup?contact.number:formatSerializedId(contact===null||contact===void 0?void 0:contact.number)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contact.email),/*#__PURE__*/React.createElement(TableCell,null,contact===null||contact===void 0?void 0:(_contact$whatsapp=contact.whatsapp)===null||_contact$whatsapp===void 0?void 0:_contact$whatsapp.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},contact.active?/*#__PURE__*/React.createElement(CheckCircleIcon,{style:{color:\"green\"},fontSize:\"small\"}):/*#__PURE__*/React.createElement(CancelIcon,{style:{color:\"red\"},fontSize:\"small\"})),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},/*#__PURE__*/React.createElement(IconButton,{size:\"small\",disabled:!contact.active,onClick:()=>{setContactTicket(contact);setNewTicketModalOpen(true);// handleSaveTicket(contact.id);\n}},contact.channel===\"whatsapp\"&&/*#__PURE__*/React.createElement(WhatsApp,{style:{color:\"green\"}}),contact.channel===\"instagram\"&&/*#__PURE__*/React.createElement(Instagram,{style:{color:\"purple\"}}),contact.channel===\"facebook\"&&/*#__PURE__*/React.createElement(Facebook,{style:{color:\"blue\"}})),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:()=>hadleEditContact(contact.id)},/*#__PURE__*/React.createElement(EditIcon,{color:\"secondary\"})),/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:contact.active?()=>{setConfirmOpen(true);setBlockingContact(contact);}:()=>{setConfirmOpen(true);setUnBlockingContact(contact);}},contact.active?/*#__PURE__*/React.createElement(BlockIcon,{color:\"secondary\"}):/*#__PURE__*/React.createElement(CheckCircleIcon,{color:\"secondary\"})),/*#__PURE__*/React.createElement(Can,{role:user.profile,perform:\"contacts-page:deleteContact\",yes:()=>/*#__PURE__*/React.createElement(IconButton,{size:\"small\",onClick:e=>{setConfirmOpen(true);setDeletingContact(contact);}},/*#__PURE__*/React.createElement(DeleteOutlineIcon,{color:\"secondary\"}))})));}),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{avatar:true,columns:6}))))));};export default Contacts;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","toast","useHistory","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","Avatar","Facebook","Instagram","WhatsApp","SearchIcon","TextField","InputAdornment","IconButton","DeleteOutlineIcon","EditIcon","CheckCircleIcon","CancelIcon","BlockIcon","api","TableRowSkeleton","ContactModal","ConfirmationModal","i18n","MainHeader","Title","MainHeaderButtonsWrapper","MainContainer","toastError","AuthContext","Can","NewTicketModal","TagsFilter","PopupState","bindTrigger","bindMenu","formatSerializedId","v4","uuidv4","ArrowDropDown","Backup","ContactPhone","Menu","MenuItem","ContactImportWpModal","useCompanySettings","TicketsContext","reducer","state","action","type","contacts","payload","newContacts","forEach","contact","contactIndex","findIndex","c","id","push","contactId","splice","useStyles","theme","mainPaper","flex","padding","spacing","overflowY","scrollbarStyles","Contacts","classes","history","user","socket","loading","setLoading","pageNumber","setPageNumber","searchParam","setSearchParam","dispatch","selectedContactId","setSelectedContactId","contactModalOpen","setContactModalOpen","importContactModalOpen","setImportContactModalOpen","deletingContact","setDeletingContact","ImportContacts","setImportContacts","blockingContact","setBlockingContact","unBlockingContact","setUnBlockingContact","confirmOpen","setConfirmOpen","exportContact","setExportContact","confirmChatsOpen","setConfirmChatsOpen","hasMore","setHasMore","newTicketModalOpen","setNewTicketModalOpen","contactTicket","setContactTicket","fileUploadRef","selectedTags","setSelectedTags","setCurrentTicket","importWhatsappId","setImportWhatsappId","getAll","getAllSettings","hideNum","setHideNum","enableLGPD","setEnableLGPD","fetchData","settingList","companyId","key","value","Object","entries","handleImportExcel","formData","FormData","append","current","files","request","url","method","data","go","err","delayDebounceFn","setTimeout","fetchContacts","get","params","contactTag","JSON","stringify","clearTimeout","onContactEvent","on","concat","off","handleSelectTicket","ticket","code","uuid","handleCloseOrOpenTicket","undefined","handleSelectedTags","selecteds","tags","map","t","handleSearch","event","target","toLowerCase","handleOpenContactModal","handleCloseContactModal","hadleEditContact","handleDeleteContact","delete","success","handleBlockContact","put","active","handleUnBlockContact","onSave","whatsappId","handleimportContact","post","handleimportChats","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","createElement","className","mainContainer","modalOpen","initialContact","onClose","open","title","name","isCellPhone","onConfirm","length","onFiltered","placeholder","onChange","InputProps","startAdornment","position","color","variant","popupId","popupState","Fragment","assign","onClick","close","fontSize","style","marginRight","isOpen","handleClose","userProfile","profile","onScroll","display","accept","ref","size","align","_formatSerializedId","_contact$number","_contact$whatsapp","paddingRight","src","urlPicture","isGroup","number","slice","email","whatsapp","disabled","channel","role","perform","yes","avatar","columns"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/pages/Contacts/index.js"],"sourcesContent":["import React, {\n    useState,\n    useEffect,\n    useReducer,\n    useContext,\n    useRef,\n} from \"react\";\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Facebook, Instagram, WhatsApp } from \"@material-ui/icons\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport BlockIcon from \"@material-ui/icons/Block\";\n\nimport api from \"../../services/api\";\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\nimport ContactModal from \"../../components/ContactModal\";\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\n\nimport { i18n } from \"../../translate/i18n\";\nimport MainHeader from \"../../components/MainHeader\";\nimport Title from \"../../components/Title\";\nimport MainHeaderButtonsWrapper from \"../../components/MainHeaderButtonsWrapper\";\nimport MainContainer from \"../../components/MainContainer\";\nimport toastError from \"../../errors/toastError\";\n\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\nimport { Can } from \"../../components/Can\";\nimport NewTicketModal from \"../../components/NewTicketModal\";\nimport { TagsFilter } from \"../../components/TagsFilter\";\nimport PopupState, { bindTrigger, bindMenu } from \"material-ui-popup-state\";\nimport formatSerializedId from '../../utils/formatSerializedId';\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport {\n    ArrowDropDown,\n    Backup,\n    ContactPhone,\n} from \"@material-ui/icons\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\n\nimport ContactImportWpModal from \"../../components/ContactImportWpModal\";\nimport useCompanySettings from \"../../hooks/useSettings/companySettings\";\nimport { TicketsContext } from \"../../context/Tickets/TicketsContext\";\n\nconst reducer = (state, action) => {\n    if (action.type === \"LOAD_CONTACTS\") {\n        const contacts = action.payload;\n        const newContacts = [];\n\n        contacts.forEach((contact) => {\n            const contactIndex = state.findIndex((c) => c.id === contact.id);\n            if (contactIndex !== -1) {\n                state[contactIndex] = contact;\n            } else {\n                newContacts.push(contact);\n            }\n        });\n\n        return [...state, ...newContacts];\n    }\n\n    if (action.type === \"UPDATE_CONTACTS\") {\n        const contact = action.payload;\n        const contactIndex = state.findIndex((c) => c.id === contact.id);\n\n        if (contactIndex !== -1) {\n            state[contactIndex] = contact;\n            return [...state];\n        } else {\n            return [contact, ...state];\n        }\n    }\n\n    if (action.type === \"DELETE_CONTACT\") {\n        const contactId = action.payload;\n\n        const contactIndex = state.findIndex((c) => c.id === contactId);\n        if (contactIndex !== -1) {\n            state.splice(contactIndex, 1);\n        }\n        return [...state];\n    }\n\n    if (action.type === \"RESET\") {\n        return [];\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    mainPaper: {\n        flex: 1,\n        padding: theme.spacing(1),\n        overflowY: \"scroll\",\n        ...theme.scrollbarStyles,\n    },\n}));\n\nconst Contacts = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    //   const socketManager = useContext(SocketContext);\n    const { user, socket } = useContext(AuthContext);\n\n\n    const [loading, setLoading] = useState(false);\n    const [pageNumber, setPageNumber] = useState(1);\n    const [searchParam, setSearchParam] = useState(\"\");\n    const [contacts, dispatch] = useReducer(reducer, []);\n    const [selectedContactId, setSelectedContactId] = useState(null);\n    const [contactModalOpen, setContactModalOpen] = useState(false);\n\n    const [importContactModalOpen, setImportContactModalOpen] = useState(false);\n    const [deletingContact, setDeletingContact] = useState(null);\n    const [ImportContacts, setImportContacts] = useState(null);\n    \n    const [blockingContact, setBlockingContact] = useState(null);\n    const [unBlockingContact, setUnBlockingContact] = useState(null);\n    const [confirmOpen, setConfirmOpen] = useState(false);\n    const [exportContact, setExportContact] = useState(false);\n    const [confirmChatsOpen, setConfirmChatsOpen] = useState(false);\n    const [hasMore, setHasMore] = useState(false);\n    const [newTicketModalOpen, setNewTicketModalOpen] = useState(false);\n    const [contactTicket, setContactTicket] = useState({});\n    const fileUploadRef = useRef(null);\n    const [selectedTags, setSelectedTags] = useState([]);\n    const { setCurrentTicket } = useContext(TicketsContext);\n\n    const [importWhatsappId, setImportWhatsappId] = useState()\n\n\n    const { getAll: getAllSettings } = useCompanySettings();\n    const [hideNum, setHideNum] = useState(false);\n    const [enableLGPD, setEnableLGPD] = useState(false);\n    useEffect(() => {\n\n        async function fetchData() {\n\n            const settingList = await getAllSettings(user.companyId);\n\n            for (const [key, value] of Object.entries(settingList)) {\n                \n                if (key === \"enableLGPD\") setEnableLGPD(value === \"enabled\");\n                if (key === \"lgpdHideNumber\") setHideNum(value === \"enabled\");\n                \n              }\n\n            // if (settingHideNumber.lgpdHideNumber === \"enabled\") {\n            //     setHideNum(true);\n            // }\n        }\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const handleImportExcel = async () => {\n        try {\n            const formData = new FormData();\n            formData.append(\"file\", fileUploadRef.current.files[0]);\n            await api.request({\n                url: `/contacts/upload`,\n                method: \"POST\",\n                data: formData,\n            });\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    useEffect(() => {\n        dispatch({ type: \"RESET\" });\n        setPageNumber(1);\n    }, [searchParam, selectedTags]);\n\n    useEffect(() => {\n        setLoading(true);\n        const delayDebounceFn = setTimeout(() => {\n            const fetchContacts = async () => {\n                try {\n                    const { data } = await api.get(\"/contacts/\", {\n                        params: { searchParam, pageNumber, contactTag: JSON.stringify(selectedTags) },\n                    });\n                    dispatch({ type: \"LOAD_CONTACTS\", payload: data.contacts });\n                    setHasMore(data.hasMore);\n                    setLoading(false);\n                } catch (err) {\n                    toastError(err);\n                }\n            };\n            fetchContacts();\n        }, 500);\n        return () => clearTimeout(delayDebounceFn);\n    }, [searchParam, pageNumber, selectedTags]);\n\n    useEffect(() => {\n        const companyId = user.companyId;\n        //    const socket = socketManager.GetSocket();\n\n        const onContactEvent = (data) => {\n            if (data.action === \"update\" || data.action === \"create\") {\n                dispatch({ type: \"UPDATE_CONTACTS\", payload: data.contact });\n            }\n\n            if (data.action === \"delete\") {\n                dispatch({ type: \"DELETE_CONTACT\", payload: +data.contactId });\n            }\n        };\n        socket.on(`company-${companyId}-contact`, onContactEvent);\n\n        return () => {\n            socket.off(`company-${companyId}-contact`, onContactEvent);\n        };\n    }, [socket]);\n\n    const handleSelectTicket = (ticket) => {\n        const code = uuidv4();\n        const { id, uuid } = ticket;\n        setCurrentTicket({ id, uuid, code });\n    }\n\n    const handleCloseOrOpenTicket = (ticket) => {\n        setNewTicketModalOpen(false);\n        if (ticket !== undefined && ticket.uuid !== undefined) {\n            handleSelectTicket(ticket);\n            history.push(`/tickets/${ticket.uuid}`);\n        }\n    };\n\n    const handleSelectedTags = (selecteds) => {\n        const tags = selecteds.map((t) => t.id);\n        setSelectedTags(tags);\n    };\n\n    const handleSearch = (event) => {\n        setSearchParam(event.target.value.toLowerCase());\n    };\n\n    const handleOpenContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(true);\n    };\n\n    const handleCloseContactModal = () => {\n        setSelectedContactId(null);\n        setContactModalOpen(false);\n    };\n\n    const hadleEditContact = (contactId) => {\n        setSelectedContactId(contactId);\n        setContactModalOpen(true);\n    };\n\n    const handleDeleteContact = async (contactId) => {\n        try {\n            await api.delete(`/contacts/${contactId}`);\n            toast.success(i18n.t(\"contacts.toasts.deleted\"));\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n    };\n\n    const handleBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: false });\n            toast.success(\"Contato bloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n        setBlockingContact(null);\n    };\n\n    const handleUnBlockContact = async (contactId) => {\n        try {\n            await api.put(`/contacts/block/${contactId}`, { active: true });\n            toast.success(\"Contato desbloqueado\");\n        } catch (err) {\n            toastError(err);\n        }\n        setDeletingContact(null);\n        setSearchParam(\"\");\n        setPageNumber(1);\n        setUnBlockingContact(null);\n    };\n\n    const onSave = (whatsappId) => {\n        setImportWhatsappId(whatsappId)\n    }\n\n\n    const handleimportContact = async () => {\n        setImportContactModalOpen(false)\n\n        try {\n            await api.post(\"/contacts/import\", { whatsappId: importWhatsappId });\n            history.go(0);\n            setImportContactModalOpen(false);\n        } catch (err) {\n            toastError(err);\n            setImportContactModalOpen(false);\n        }\n    };\n\n    const handleimportChats = async () => {\n        try {\n            await api.post(\"/contacts/import/chats\");\n            history.go(0);\n        } catch (err) {\n            toastError(err);\n        }\n    };\n\n    const loadMore = () => {\n        setPageNumber((prevState) => prevState + 1);\n    };\n\n    const handleScroll = (e) => {\n        if (!hasMore || loading) return;\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\n            loadMore();\n        }\n    };\n\n    // function getDateLastMessage(contact) {\n    //     if (!contact) return null;\n    //     if (!contact.tickets) return null;\n\n    //     if (contact.tickets.length > 0) {\n    //         const date = new Date(contact.tickets[contact.tickets.length - 1].updatedAt);\n\n    //         const day = date.getDate() > 9 ? date.getDate() : `0${date.getDate()}`;\n    //         const month = date.getMonth() + 1 > 9 ? date.getMonth() + 1 : `0${date.getMonth() + 1}`;\n    //         const year = date.getFullYear();\n    //         const hours = date.getHours() > 9 ? date.getHours() : `0${date.getHours()}`;\n    //         const minutes = date.getMinutes() > 9 ? date.getMinutes() : `0${date.getMinutes()}`;\n\n    //         return `${day}/${month}/${year} ${hours}:${minutes}`;\n    //     }\n\n    //     return null;\n    // }\n\n\n    return (\n\n        <MainContainer className={classes.mainContainer}>\n            <NewTicketModal\n                modalOpen={newTicketModalOpen}\n                initialContact={contactTicket}\n                onClose={(ticket) => {\n                    handleCloseOrOpenTicket(ticket);\n                }}\n            />\n            <ContactModal\n                open={contactModalOpen}\n                onClose={handleCloseContactModal}\n                aria-labelledby=\"form-dialog-title\"\n                contactId={selectedContactId}\n            ></ContactModal>\n            {/* <ContactImportModal \n                open={ImportContacts}\n                onClose={setConfirmOpen}\n                onSave={handleimportContact}\n            /> */}\n            <ConfirmationModal\n                title={\n                    deletingContact\n                        ? `${i18n.t(\n                            \"contacts.confirmationModal.deleteTitle\"\n                        )} ${deletingContact.name}?`\n                        : blockingContact\n                            ? `Bloquear Contato ${blockingContact.name}?`\n                            : unBlockingContact\n                                ? `Desbloquear Contato ${unBlockingContact.name}?`\n                                : ImportContacts\n                                    ? `${i18n.t(\"contacts.confirmationModal.importTitlte\")}`\n                                    : `${i18n.t(\"contactListItems.confirmationModal.importTitlte\")}`\n                }\n                onSave={onSave}\n                isCellPhone={ImportContacts}\n                open={confirmOpen}\n                onClose={setConfirmOpen}\n                onConfirm={(e) =>\n                    deletingContact\n                        ? handleDeleteContact(deletingContact.id)\n                        : blockingContact\n                            ? handleBlockContact(blockingContact.id)\n                            : unBlockingContact\n                                ? handleUnBlockContact(unBlockingContact.id)\n                                : ImportContacts\n                                    ? handleimportContact()\n                                    : handleImportExcel()\n                }\n            >\n                {exportContact\n                    ?\n                    `${i18n.t(\"contacts.confirmationModal.exportContact\")}`\n                    : deletingContact\n                        ? `${i18n.t(\"contacts.confirmationModal.deleteMessage\")}`\n                        : blockingContact\n                            ? `${i18n.t(\"contacts.confirmationModal.blockContact\")}`\n                            : unBlockingContact\n                                ? `${i18n.t(\"contacts.confirmationModal.unblockContact\")}`\n                                : ImportContacts\n                                    ? `Escolha de qual conexão deseja importar`\n                                    : `${i18n.t(\n                                        \"contactListItems.confirmationModal.importMessage\"\n                                    )}`}\n            </ConfirmationModal>\n            <ConfirmationModal\n                title={i18n.t(\"contacts.confirmationModal.importChat\")}\n                open={confirmChatsOpen}\n                onClose={setConfirmChatsOpen}\n                onConfirm={(e) => handleimportChats()}\n            >\n                {i18n.t(\"contacts.confirmationModal.wantImport\")}\n            </ConfirmationModal>\n            <MainHeader>\n                <Title>{i18n.t(\"contacts.title\")} ({contacts.length})</Title>\n                <MainHeaderButtonsWrapper>\n                    <TagsFilter\n                        onFiltered={handleSelectedTags}\n                    />\n                    <TextField\n                        placeholder={i18n.t(\"contacts.searchPlaceholder\")}\n                        type=\"search\"\n                        value={searchParam}\n                        onChange={handleSearch}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <SearchIcon color=\"secondary\" />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                    <PopupState variant=\"popover\" popupId=\"demo-popup-menu\">\n                        {(popupState) => (\n                            <React.Fragment>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    {...bindTrigger(popupState)}\n                                >\n                                    Importar / Exportar\n                                    <ArrowDropDown />\n                                </Button>\n                                <Menu {...bindMenu(popupState)}>\n                                    <MenuItem\n                                        onClick={() => {\n                                            setConfirmOpen(true);\n                                            setImportContacts(true);\n                                            popupState.close();\n                                        }}\n                                    >\n                                        <ContactPhone\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        {i18n.t(\"contacts.menu.importYourPhone\")}\n                                    </MenuItem>\n                                    <MenuItem\n                                        onClick={() => { setImportContactModalOpen(true) }}\n\n                                    >\n                                        <Backup\n                                            fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            }}\n                                        />\n                                        {i18n.t(\"contacts.menu.importToExcel\")}\n\n                                    </MenuItem>\n                                    {/* {<MenuItem>\n                        \n                                       <CSVLink\n                                            className={classes.csvbtn}\n                                            separator=\";\"\n                                            filename={'contacts.csv'}\n                                            data={\n                                                contacts.map((contact) => ({\n                                                    number: hideNum && user.profile === \"user\" ? contact.isGroup ? contact.number : formatSerializedId(contact.number).slice(0,-6)+\"**-**\"+ contact.number.slice(-2): contact.isGroup ? contact.number : formatSerializedId(contact.number),\n                                                    firstName: contact.name.split(' ')[0],\n                                                    lastname: String(contact.name).replace(contact.name.split(' ')[0],''),\n                                                    tags: contact?.tags?.name\n                                                }))\n\n                                            }\n                                            \n                                            >\n                                        \n                                        <CloudDownload fontSize=\"small\"\n                                            color=\"primary\"\n                                            style={{\n                                                marginRight: 10,\n                                            \n                                                }}                                                \n                                        />        \n                                        Exportar Excel                                \n                                   </CSVLink>\n                                        \n                                    </MenuItem> } */}\n                                </Menu>\n                            </React.Fragment>\n                        )}\n                    </PopupState>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleOpenContactModal}\n                    >\n                        {i18n.t(\"contacts.buttons.add\")}\n                    </Button>\n                </MainHeaderButtonsWrapper>\n            </MainHeader>\n\n            {importContactModalOpen && (\n                <ContactImportWpModal\n                    isOpen={importContactModalOpen}\n                    handleClose={() => setImportContactModalOpen(false)}\n                    selectedTags={selectedTags}\n                    hideNum={hideNum}\n                    userProfile={user.profile}\n                />\n            )}\n            <Paper\n                className={classes.mainPaper}\n                variant=\"outlined\"\n                onScroll={handleScroll}\n            >\n                <>\n                    <input\n                        style={{ display: \"none\" }}\n                        id=\"upload\"\n                        name=\"file\"\n                        type=\"file\"\n                        accept=\".xls,.xlsx\"\n                        onChange={() => {\n                            setConfirmOpen(true);\n                        }}\n                        ref={fileUploadRef}\n                    />\n                </>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell padding=\"checkbox\" />\n                            <TableCell>\n                                {i18n.t(\"contacts.table.name\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.email\")}\n                            </TableCell>\n                            {/* <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.lastMessage\")}\n                            </TableCell> */}\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.whatsapp\")}\n                            </TableCell>\n                            <TableCell align=\"center\">{\"Status\"}</TableCell>\n                            <TableCell align=\"center\">\n                                {i18n.t(\"contacts.table.actions\")}\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        <>\n                            {contacts.map((contact) => (\n                                <TableRow key={contact.id}>\n                                    <TableCell style={{ paddingRight: 0 }}>\n                                        {<Avatar src={`${contact?.urlPicture}`} />}\n                                    </TableCell>\n                                    <TableCell>{contact.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {((enableLGPD && hideNum && user.profile === \"user\")\n                                            ? contact.isGroup\n                                                ? contact.number :\n                                                formatSerializedId(contact?.number) === null ? contact.number.slice(0, -6) + \"**-**\" + contact?.number.slice(-2) :\n                                                    formatSerializedId(contact?.number)?.slice(0, -6) + \"**-**\" + contact?.number?.slice(-2) :\n                                                    contact.isGroup ? contact.number : formatSerializedId(contact?.number)\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.email}\n                                    </TableCell>\n                                    {/* <TableCell align=\"center\">\n                                        {getDateLastMessage(contact)}\n                                    </TableCell> */}\n                                    <TableCell>{contact?.whatsapp?.name}</TableCell>\n                                    <TableCell align=\"center\">\n                                        {contact.active ? (\n                                            <CheckCircleIcon\n                                                style={{ color: \"green\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        ) : (\n                                            <CancelIcon\n                                                style={{ color: \"red\" }}\n                                                fontSize=\"small\"\n                                            />\n                                        )}\n                                    </TableCell>\n                                    <TableCell align=\"center\">\n                                        <IconButton\n                                            size=\"small\"\n                                            disabled={!contact.active}\n                                            onClick={() => {\n                                                setContactTicket(contact);\n                                                setNewTicketModalOpen(true);\n                                                // handleSaveTicket(contact.id);\n                                            }}\n                                        >\n                                            {contact.channel === \"whatsapp\" && (<WhatsApp style={{ color: \"green\" }} />)}\n                                            {contact.channel === \"instagram\" && (<Instagram style={{ color: \"purple\" }} />)}\n                                            {contact.channel === \"facebook\" && (<Facebook style={{ color: \"blue\" }} />)}\n                                        </IconButton>\n\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={() =>\n                                                hadleEditContact(contact.id)\n                                            }\n                                        >\n                                            <EditIcon color=\"secondary\" />\n                                        </IconButton>\n                                        <IconButton\n                                            size=\"small\"\n                                            onClick={\n                                                contact.active\n                                                    ? () => {\n                                                        setConfirmOpen(true);\n                                                        setBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                                    : () => {\n                                                        setConfirmOpen(true);\n                                                        setUnBlockingContact(\n                                                            contact\n                                                        );\n                                                    }\n                                            }\n                                        >\n                                            {contact.active ? (\n                                                <BlockIcon color=\"secondary\" />\n                                            ) : (\n                                                <CheckCircleIcon color=\"secondary\" />\n                                            )}\n                                        </IconButton>\n                                        <Can\n                                            role={user.profile}\n                                            perform=\"contacts-page:deleteContact\"\n                                            yes={() => (\n                                                <IconButton\n                                                    size=\"small\"\n                                                    onClick={(e) => {\n                                                        setConfirmOpen(true);\n                                                        setDeletingContact(\n                                                            contact\n                                                        );\n                                                    }}\n                                                >\n                                                    <DeleteOutlineIcon color=\"secondary\" />\n                                                </IconButton>\n                                            )}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            {loading && <TableRowSkeleton avatar columns={6} />}\n                        </>\n                    </TableBody>\n                </Table>\n            </Paper>\n        </MainContainer >\n    );\n};\n\nexport default Contacts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}