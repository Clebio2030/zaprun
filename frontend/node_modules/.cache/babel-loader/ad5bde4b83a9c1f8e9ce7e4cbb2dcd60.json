{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _redux = require(\"redux\");\nvar _reactRedux = require(\"react-redux\");\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\nvar _Lane = _interopRequireDefault(require(\"./Lane\"));\nvar _reactPopopo = require(\"react-popopo\");\nvar boardActions = _interopRequireWildcard(require(\"../actions/BoardActions\"));\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\nclass BoardContainer extends _react.Component {\n  constructor() {\n    super(...arguments);\n    (0, _defineProperty2.default)(this, \"state\", {\n      addLaneMode: false\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", _ref => {\n      let {\n        payload\n      } = _ref;\n      const handleLaneDragStart = this.props.handleLaneDragStart;\n      handleLaneDragStart(payload.id);\n    });\n    (0, _defineProperty2.default)(this, \"onLaneDrop\", _ref2 => {\n      let {\n        removedIndex,\n        addedIndex,\n        payload\n      } = _ref2;\n      const _this$props = this.props,\n        actions = _this$props.actions,\n        handleLaneDragEnd = _this$props.handleLaneDragEnd;\n      if (removedIndex !== addedIndex) {\n        actions.moveLane({\n          oldIndex: removedIndex,\n          newIndex: addedIndex\n        });\n        handleLaneDragEnd(removedIndex, addedIndex, payload);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"getCardDetails\", (laneId, cardIndex) => {\n      return this.props.reducerData.lanes.find(lane => lane.id === laneId).cards[cardIndex];\n    });\n    (0, _defineProperty2.default)(this, \"getLaneDetails\", index => {\n      return this.props.reducerData.lanes[index];\n    });\n    (0, _defineProperty2.default)(this, \"wireEventBus\", () => {\n      const _this$props2 = this.props,\n        actions = _this$props2.actions,\n        eventBusHandle = _this$props2.eventBusHandle;\n      let eventBus = {\n        publish: event => {\n          switch (event.type) {\n            case 'ADD_CARD':\n              return actions.addCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n            case 'REMOVE_CARD':\n              return actions.removeCard({\n                laneId: event.laneId,\n                cardId: event.cardId\n              });\n            case 'REFRESH_BOARD':\n              return actions.loadBoard(event.data);\n            case 'MOVE_CARD':\n              return actions.moveCardAcrossLanes({\n                fromLaneId: event.fromLaneId,\n                toLaneId: event.toLaneId,\n                cardId: event.cardId,\n                index: event.index\n              });\n            case 'UPDATE_CARDS':\n              return actions.updateCards({\n                laneId: event.laneId,\n                cards: event.cards\n              });\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                updatedCard: event.card\n              });\n            case 'UPDATE_LANES':\n              return actions.updateLanes(event.lanes);\n            case 'UPDATE_LANE':\n              return actions.updateLane(event.lane);\n          }\n        }\n      };\n      eventBusHandle(eventBus);\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableLane\", () => {\n      this.setState({\n        addLaneMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"showEditableLane\", () => {\n      this.setState({\n        addLaneMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewLane\", params => {\n      this.hideEditableLane();\n      this.props.actions.addLane(params);\n      this.props.onLaneAdd(params);\n    });\n  }\n  componentDidMount() {\n    const _this$props3 = this.props,\n      actions = _this$props3.actions,\n      eventBusHandle = _this$props3.eventBusHandle;\n    actions.loadBoard(this.props.data);\n    if (eventBusHandle) {\n      this.wireEventBus();\n    }\n  }\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // nextProps.data changes when external Board input props change and nextProps.reducerData changes due to event bus or UI changes\n    const _this$props4 = this.props,\n      data = _this$props4.data,\n      reducerData = _this$props4.reducerData,\n      onDataChange = _this$props4.onDataChange;\n    if (nextProps.reducerData && !(0, _isEqual.default)(reducerData, nextProps.reducerData)) {\n      onDataChange(nextProps.reducerData);\n    }\n    if (nextProps.data && !(0, _isEqual.default)(nextProps.data, data)) {\n      this.props.actions.loadBoard(nextProps.data);\n      onDataChange(nextProps.data);\n    }\n  }\n  get groupName() {\n    const id = this.props.id;\n    return \"TrelloBoard\".concat(id);\n  }\n  render() {\n    const _this$props5 = this.props,\n      id = _this$props5.id,\n      components = _this$props5.components,\n      reducerData = _this$props5.reducerData,\n      draggable = _this$props5.draggable,\n      laneDraggable = _this$props5.laneDraggable,\n      laneDragClass = _this$props5.laneDragClass,\n      laneDropClass = _this$props5.laneDropClass,\n      style = _this$props5.style,\n      onDataChange = _this$props5.onDataChange,\n      onCardAdd = _this$props5.onCardAdd,\n      onCardUpdate = _this$props5.onCardUpdate,\n      onCardClick = _this$props5.onCardClick,\n      onBeforeCardDelete = _this$props5.onBeforeCardDelete,\n      onCardDelete = _this$props5.onCardDelete,\n      onLaneScroll = _this$props5.onLaneScroll,\n      onLaneClick = _this$props5.onLaneClick,\n      onLaneAdd = _this$props5.onLaneAdd,\n      onLaneDelete = _this$props5.onLaneDelete,\n      onLaneUpdate = _this$props5.onLaneUpdate,\n      editable = _this$props5.editable,\n      canAddLanes = _this$props5.canAddLanes,\n      laneStyle = _this$props5.laneStyle,\n      onCardMoveAcrossLanes = _this$props5.onCardMoveAcrossLanes,\n      t = _this$props5.t,\n      otherProps = (0, _objectWithoutProperties2.default)(_this$props5, [\"id\", \"components\", \"reducerData\", \"draggable\", \"laneDraggable\", \"laneDragClass\", \"laneDropClass\", \"style\", \"onDataChange\", \"onCardAdd\", \"onCardUpdate\", \"onCardClick\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneScroll\", \"onLaneClick\", \"onLaneAdd\", \"onLaneDelete\", \"onLaneUpdate\", \"editable\", \"canAddLanes\", \"laneStyle\", \"onCardMoveAcrossLanes\", \"t\"]);\n    const addLaneMode = this.state.addLaneMode; // Stick to whitelisting attributes to segregate board and lane props\n\n    const passthroughProps = (0, _pick.default)(this.props, ['onCardMoveAcrossLanes', 'onLaneScroll', 'onLaneDelete', 'onLaneUpdate', 'onCardClick', 'onBeforeCardDelete', 'onCardDelete', 'onCardAdd', 'onCardUpdate', 'onLaneClick', 'laneSortFunction', 'draggable', 'laneDraggable', 'cardDraggable', 'collapsibleLanes', 'canAddLanes', 'hideCardDeleteIcon', 'tagStyle', 'handleDragStart', 'handleDragEnd', 'cardDragClass', 'editLaneTitle', 't']);\n    return _react.default.createElement(components.BoardWrapper, (0, _extends2.default)({\n      style: style\n    }, otherProps, {\n      draggable: false\n    }), _react.default.createElement(_reactPopopo.PopoverWrapper, null, _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\",\n      onDragStart: this.onDragStart,\n      dragClass: laneDragClass,\n      dropClass: laneDropClass,\n      onDrop: this.onLaneDrop,\n      lockAxis: \"x\",\n      getChildPayload: index => this.getLaneDetails(index),\n      groupName: this.groupName\n    }, reducerData.lanes.map((lane, index) => {\n      const id = lane.id,\n        droppable = lane.droppable,\n        otherProps = (0, _objectWithoutProperties2.default)(lane, [\"id\", \"droppable\"]);\n      const laneToRender = _react.default.createElement(_Lane.default, (0, _extends2.default)({\n        key: id,\n        boardId: this.groupName,\n        components: components,\n        id: id,\n        getCardDetails: this.getCardDetails,\n        index: index,\n        droppable: droppable === undefined ? true : droppable,\n        style: laneStyle || lane.style || {},\n        labelStyle: lane.labelStyle || {},\n        cardStyle: this.props.cardStyle || lane.cardStyle,\n        editable: editable && !lane.disallowAddingCard\n      }, otherProps, passthroughProps));\n      return draggable && laneDraggable ? _react.default.createElement(_Draggable.default, {\n        key: lane.id\n      }, laneToRender) : laneToRender;\n    }))), canAddLanes && _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\"\n    }, editable && !addLaneMode ? _react.default.createElement(components.NewLaneSection, {\n      t: t,\n      onClick: this.showEditableLane\n    }) : addLaneMode && _react.default.createElement(components.NewLaneForm, {\n      onCancel: this.hideEditableLane,\n      onAdd: this.addNewLane,\n      t: t\n    })));\n  }\n}\nBoardContainer.propTypes = {\n  id: _propTypes.default.string,\n  components: _propTypes.default.object,\n  actions: _propTypes.default.object,\n  data: _propTypes.default.object.isRequired,\n  reducerData: _propTypes.default.object,\n  onDataChange: _propTypes.default.func,\n  eventBusHandle: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneAdd: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  laneSortFunction: _propTypes.default.func,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  editable: _propTypes.default.bool,\n  canAddLanes: _propTypes.default.bool,\n  hideCardDeleteIcon: _propTypes.default.bool,\n  handleDragStart: _propTypes.default.func,\n  handleDragEnd: _propTypes.default.func,\n  handleLaneDragStart: _propTypes.default.func,\n  handleLaneDragEnd: _propTypes.default.func,\n  style: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  laneDragClass: _propTypes.default.string,\n  laneDropClass: _propTypes.default.string,\n  onCardMoveAcrossLanes: _propTypes.default.func.isRequired,\n  t: _propTypes.default.func.isRequired\n};\nBoardContainer.defaultProps = {\n  t: v => v,\n  onDataChange: () => {},\n  handleDragStart: () => {},\n  handleDragEnd: () => {},\n  handleLaneDragStart: () => {},\n  handleLaneDragEnd: () => {},\n  onCardUpdate: () => {},\n  onLaneAdd: () => {},\n  onLaneDelete: () => {},\n  onCardMoveAcrossLanes: () => {},\n  onLaneUpdate: () => {},\n  editable: false,\n  canAddLanes: false,\n  hideCardDeleteIcon: false,\n  draggable: false,\n  collapsibleLanes: false,\n  laneDraggable: true,\n  cardDraggable: true,\n  cardDragClass: 'react_trello_dragClass',\n  laneDragClass: 'react_trello_dragLaneClass',\n  laneDropClass: ''\n};\nconst mapStateToProps = state => {\n  return state.lanes ? {\n    reducerData: state\n  } : {};\n};\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)((0, _objectSpread2.default)({}, boardActions, laneActions), dispatch)\n});\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BoardContainer);\nexports.default = _default;","map":{"version":3,"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_objectSpread2","_extends2","_objectWithoutProperties2","_defineProperty2","_react","_redux","_reactRedux","_Container","_Draggable","_propTypes","_pick","_isEqual","_Lane","_reactPopopo","boardActions","laneActions","BoardContainer","Component","constructor","arguments","addLaneMode","_ref","payload","handleLaneDragStart","props","id","_ref2","removedIndex","addedIndex","_this$props","actions","handleLaneDragEnd","moveLane","oldIndex","newIndex","laneId","cardIndex","reducerData","lanes","find","lane","cards","index","_this$props2","eventBusHandle","eventBus","publish","event","type","addCard","card","updateCard","removeCard","cardId","loadBoard","data","moveCardAcrossLanes","fromLaneId","toLaneId","updateCards","updatedCard","updateLanes","updateLane","setState","params","hideEditableLane","addLane","onLaneAdd","componentDidMount","_this$props3","wireEventBus","UNSAFE_componentWillReceiveProps","nextProps","_this$props4","onDataChange","groupName","concat","render","_this$props5","components","draggable","laneDraggable","laneDragClass","laneDropClass","style","onCardAdd","onCardUpdate","onCardClick","onBeforeCardDelete","onCardDelete","onLaneScroll","onLaneClick","onLaneDelete","onLaneUpdate","editable","canAddLanes","laneStyle","onCardMoveAcrossLanes","t","otherProps","state","passthroughProps","createElement","BoardWrapper","PopoverWrapper","orientation","onDragStart","dragClass","dropClass","onDrop","onLaneDrop","lockAxis","getChildPayload","getLaneDetails","map","droppable","laneToRender","key","boardId","getCardDetails","undefined","labelStyle","cardStyle","disallowAddingCard","NewLaneSection","onClick","showEditableLane","NewLaneForm","onCancel","onAdd","addNewLane","propTypes","string","object","isRequired","func","laneSortFunction","bool","collapsibleLanes","hideCardDeleteIcon","handleDragStart","handleDragEnd","tagStyle","cardDraggable","cardDragClass","defaultProps","v","mapStateToProps","mapDispatchToProps","dispatch","bindActionCreators","_default","connect"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/node_modules/react-trello/dist/controllers/BoardContainer.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _redux = require(\"redux\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Container = _interopRequireDefault(require(\"../dnd/Container\"));\n\nvar _Draggable = _interopRequireDefault(require(\"../dnd/Draggable\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _Lane = _interopRequireDefault(require(\"./Lane\"));\n\nvar _reactPopopo = require(\"react-popopo\");\n\nvar boardActions = _interopRequireWildcard(require(\"../actions/BoardActions\"));\n\nvar laneActions = _interopRequireWildcard(require(\"../actions/LaneActions\"));\n\nclass BoardContainer extends _react.Component {\n  constructor(...args) {\n    super(...args);\n    (0, _defineProperty2.default)(this, \"state\", {\n      addLaneMode: false\n    });\n    (0, _defineProperty2.default)(this, \"onDragStart\", ({\n      payload\n    }) => {\n      const handleLaneDragStart = this.props.handleLaneDragStart;\n      handleLaneDragStart(payload.id);\n    });\n    (0, _defineProperty2.default)(this, \"onLaneDrop\", ({\n      removedIndex,\n      addedIndex,\n      payload\n    }) => {\n      const _this$props = this.props,\n            actions = _this$props.actions,\n            handleLaneDragEnd = _this$props.handleLaneDragEnd;\n\n      if (removedIndex !== addedIndex) {\n        actions.moveLane({\n          oldIndex: removedIndex,\n          newIndex: addedIndex\n        });\n        handleLaneDragEnd(removedIndex, addedIndex, payload);\n      }\n    });\n    (0, _defineProperty2.default)(this, \"getCardDetails\", (laneId, cardIndex) => {\n      return this.props.reducerData.lanes.find(lane => lane.id === laneId).cards[cardIndex];\n    });\n    (0, _defineProperty2.default)(this, \"getLaneDetails\", index => {\n      return this.props.reducerData.lanes[index];\n    });\n    (0, _defineProperty2.default)(this, \"wireEventBus\", () => {\n      const _this$props2 = this.props,\n            actions = _this$props2.actions,\n            eventBusHandle = _this$props2.eventBusHandle;\n      let eventBus = {\n        publish: event => {\n          switch (event.type) {\n            case 'ADD_CARD':\n              return actions.addCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                card: event.card\n              });\n\n            case 'REMOVE_CARD':\n              return actions.removeCard({\n                laneId: event.laneId,\n                cardId: event.cardId\n              });\n\n            case 'REFRESH_BOARD':\n              return actions.loadBoard(event.data);\n\n            case 'MOVE_CARD':\n              return actions.moveCardAcrossLanes({\n                fromLaneId: event.fromLaneId,\n                toLaneId: event.toLaneId,\n                cardId: event.cardId,\n                index: event.index\n              });\n\n            case 'UPDATE_CARDS':\n              return actions.updateCards({\n                laneId: event.laneId,\n                cards: event.cards\n              });\n\n            case 'UPDATE_CARD':\n              return actions.updateCard({\n                laneId: event.laneId,\n                updatedCard: event.card\n              });\n\n            case 'UPDATE_LANES':\n              return actions.updateLanes(event.lanes);\n\n            case 'UPDATE_LANE':\n              return actions.updateLane(event.lane);\n          }\n        }\n      };\n      eventBusHandle(eventBus);\n    });\n    (0, _defineProperty2.default)(this, \"hideEditableLane\", () => {\n      this.setState({\n        addLaneMode: false\n      });\n    });\n    (0, _defineProperty2.default)(this, \"showEditableLane\", () => {\n      this.setState({\n        addLaneMode: true\n      });\n    });\n    (0, _defineProperty2.default)(this, \"addNewLane\", params => {\n      this.hideEditableLane();\n      this.props.actions.addLane(params);\n      this.props.onLaneAdd(params);\n    });\n  }\n\n  componentDidMount() {\n    const _this$props3 = this.props,\n          actions = _this$props3.actions,\n          eventBusHandle = _this$props3.eventBusHandle;\n    actions.loadBoard(this.props.data);\n\n    if (eventBusHandle) {\n      this.wireEventBus();\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // nextProps.data changes when external Board input props change and nextProps.reducerData changes due to event bus or UI changes\n    const _this$props4 = this.props,\n          data = _this$props4.data,\n          reducerData = _this$props4.reducerData,\n          onDataChange = _this$props4.onDataChange;\n\n    if (nextProps.reducerData && !(0, _isEqual.default)(reducerData, nextProps.reducerData)) {\n      onDataChange(nextProps.reducerData);\n    }\n\n    if (nextProps.data && !(0, _isEqual.default)(nextProps.data, data)) {\n      this.props.actions.loadBoard(nextProps.data);\n      onDataChange(nextProps.data);\n    }\n  }\n\n  get groupName() {\n    const id = this.props.id;\n    return \"TrelloBoard\".concat(id);\n  }\n\n  render() {\n    const _this$props5 = this.props,\n          id = _this$props5.id,\n          components = _this$props5.components,\n          reducerData = _this$props5.reducerData,\n          draggable = _this$props5.draggable,\n          laneDraggable = _this$props5.laneDraggable,\n          laneDragClass = _this$props5.laneDragClass,\n          laneDropClass = _this$props5.laneDropClass,\n          style = _this$props5.style,\n          onDataChange = _this$props5.onDataChange,\n          onCardAdd = _this$props5.onCardAdd,\n          onCardUpdate = _this$props5.onCardUpdate,\n          onCardClick = _this$props5.onCardClick,\n          onBeforeCardDelete = _this$props5.onBeforeCardDelete,\n          onCardDelete = _this$props5.onCardDelete,\n          onLaneScroll = _this$props5.onLaneScroll,\n          onLaneClick = _this$props5.onLaneClick,\n          onLaneAdd = _this$props5.onLaneAdd,\n          onLaneDelete = _this$props5.onLaneDelete,\n          onLaneUpdate = _this$props5.onLaneUpdate,\n          editable = _this$props5.editable,\n          canAddLanes = _this$props5.canAddLanes,\n          laneStyle = _this$props5.laneStyle,\n          onCardMoveAcrossLanes = _this$props5.onCardMoveAcrossLanes,\n          t = _this$props5.t,\n          otherProps = (0, _objectWithoutProperties2.default)(_this$props5, [\"id\", \"components\", \"reducerData\", \"draggable\", \"laneDraggable\", \"laneDragClass\", \"laneDropClass\", \"style\", \"onDataChange\", \"onCardAdd\", \"onCardUpdate\", \"onCardClick\", \"onBeforeCardDelete\", \"onCardDelete\", \"onLaneScroll\", \"onLaneClick\", \"onLaneAdd\", \"onLaneDelete\", \"onLaneUpdate\", \"editable\", \"canAddLanes\", \"laneStyle\", \"onCardMoveAcrossLanes\", \"t\"]);\n    const addLaneMode = this.state.addLaneMode; // Stick to whitelisting attributes to segregate board and lane props\n\n    const passthroughProps = (0, _pick.default)(this.props, ['onCardMoveAcrossLanes', 'onLaneScroll', 'onLaneDelete', 'onLaneUpdate', 'onCardClick', 'onBeforeCardDelete', 'onCardDelete', 'onCardAdd', 'onCardUpdate', 'onLaneClick', 'laneSortFunction', 'draggable', 'laneDraggable', 'cardDraggable', 'collapsibleLanes', 'canAddLanes', 'hideCardDeleteIcon', 'tagStyle', 'handleDragStart', 'handleDragEnd', 'cardDragClass', 'editLaneTitle', 't']);\n    return _react.default.createElement(components.BoardWrapper, (0, _extends2.default)({\n      style: style\n    }, otherProps, {\n      draggable: false\n    }), _react.default.createElement(_reactPopopo.PopoverWrapper, null, _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\",\n      onDragStart: this.onDragStart,\n      dragClass: laneDragClass,\n      dropClass: laneDropClass,\n      onDrop: this.onLaneDrop,\n      lockAxis: \"x\",\n      getChildPayload: index => this.getLaneDetails(index),\n      groupName: this.groupName\n    }, reducerData.lanes.map((lane, index) => {\n      const id = lane.id,\n            droppable = lane.droppable,\n            otherProps = (0, _objectWithoutProperties2.default)(lane, [\"id\", \"droppable\"]);\n\n      const laneToRender = _react.default.createElement(_Lane.default, (0, _extends2.default)({\n        key: id,\n        boardId: this.groupName,\n        components: components,\n        id: id,\n        getCardDetails: this.getCardDetails,\n        index: index,\n        droppable: droppable === undefined ? true : droppable,\n        style: laneStyle || lane.style || {},\n        labelStyle: lane.labelStyle || {},\n        cardStyle: this.props.cardStyle || lane.cardStyle,\n        editable: editable && !lane.disallowAddingCard\n      }, otherProps, passthroughProps));\n\n      return draggable && laneDraggable ? _react.default.createElement(_Draggable.default, {\n        key: lane.id\n      }, laneToRender) : laneToRender;\n    }))), canAddLanes && _react.default.createElement(_Container.default, {\n      orientation: \"horizontal\"\n    }, editable && !addLaneMode ? _react.default.createElement(components.NewLaneSection, {\n      t: t,\n      onClick: this.showEditableLane\n    }) : addLaneMode && _react.default.createElement(components.NewLaneForm, {\n      onCancel: this.hideEditableLane,\n      onAdd: this.addNewLane,\n      t: t\n    })));\n  }\n\n}\n\nBoardContainer.propTypes = {\n  id: _propTypes.default.string,\n  components: _propTypes.default.object,\n  actions: _propTypes.default.object,\n  data: _propTypes.default.object.isRequired,\n  reducerData: _propTypes.default.object,\n  onDataChange: _propTypes.default.func,\n  eventBusHandle: _propTypes.default.func,\n  onLaneScroll: _propTypes.default.func,\n  onCardClick: _propTypes.default.func,\n  onBeforeCardDelete: _propTypes.default.func,\n  onCardDelete: _propTypes.default.func,\n  onCardAdd: _propTypes.default.func,\n  onCardUpdate: _propTypes.default.func,\n  onLaneAdd: _propTypes.default.func,\n  onLaneDelete: _propTypes.default.func,\n  onLaneClick: _propTypes.default.func,\n  onLaneUpdate: _propTypes.default.func,\n  laneSortFunction: _propTypes.default.func,\n  draggable: _propTypes.default.bool,\n  collapsibleLanes: _propTypes.default.bool,\n  editable: _propTypes.default.bool,\n  canAddLanes: _propTypes.default.bool,\n  hideCardDeleteIcon: _propTypes.default.bool,\n  handleDragStart: _propTypes.default.func,\n  handleDragEnd: _propTypes.default.func,\n  handleLaneDragStart: _propTypes.default.func,\n  handleLaneDragEnd: _propTypes.default.func,\n  style: _propTypes.default.object,\n  tagStyle: _propTypes.default.object,\n  laneDraggable: _propTypes.default.bool,\n  cardDraggable: _propTypes.default.bool,\n  cardDragClass: _propTypes.default.string,\n  laneDragClass: _propTypes.default.string,\n  laneDropClass: _propTypes.default.string,\n  onCardMoveAcrossLanes: _propTypes.default.func.isRequired,\n  t: _propTypes.default.func.isRequired\n};\nBoardContainer.defaultProps = {\n  t: v => v,\n  onDataChange: () => {},\n  handleDragStart: () => {},\n  handleDragEnd: () => {},\n  handleLaneDragStart: () => {},\n  handleLaneDragEnd: () => {},\n  onCardUpdate: () => {},\n  onLaneAdd: () => {},\n  onLaneDelete: () => {},\n  onCardMoveAcrossLanes: () => {},\n  onLaneUpdate: () => {},\n  editable: false,\n  canAddLanes: false,\n  hideCardDeleteIcon: false,\n  draggable: false,\n  collapsibleLanes: false,\n  laneDraggable: true,\n  cardDraggable: true,\n  cardDragClass: 'react_trello_dragClass',\n  laneDragClass: 'react_trello_dragLaneClass',\n  laneDropClass: ''\n};\n\nconst mapStateToProps = state => {\n  return state.lanes ? {\n    reducerData: state\n  } : {};\n};\n\nconst mapDispatchToProps = dispatch => ({\n  actions: (0, _redux.bindActionCreators)((0, _objectSpread2.default)({}, boardActions, laneActions), dispatch)\n});\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(BoardContainer);\n\nexports.default = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}