{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{useHistory}from\"react-router-dom\";import QRCode from'react-qr-code';import{SuccessContent,Total}from'./style';import{CopyToClipboard}from'react-copy-to-clipboard';import{FaCopy,FaCheckCircle}from'react-icons/fa';import{useDate}from\"../../../hooks/useDate\";import{toast}from\"react-toastify\";import{AuthContext}from\"../../../context/Auth/AuthContext\";function CheckoutSuccess(props){const{pix}=props;const[pixString]=useState(pix.qrcode.qrcode);const[copied,setCopied]=useState(false);const history=useHistory();//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);const{dateToClient}=useDate();useEffect(()=>{const companyId=user.companyId;if(companyId){// const socket = socketManager.GetSocket();\nconst onCompanyPayment=data=>{if(data.action===\"CONCLUIDA\"){toast.success(\"Sua licen\\xE7a foi renovada at\\xE9 \".concat(dateToClient(data.company.dueDate),\"!\"));setTimeout(()=>{history.push(\"/\");},4000);}};socket.on(\"company-\".concat(companyId,\"-payment\"),onCompanyPayment);return()=>{socket.off(\"company-\".concat(companyId,\"-payment\"),onCompanyPayment);};}},[socket]);const handleCopyQR=()=>{setTimeout(()=>{setCopied(false);},1*1000);setCopied(true);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Total,null,/*#__PURE__*/React.createElement(\"span\",null,\"TOTAL\"),/*#__PURE__*/React.createElement(\"strong\",null,\"R$\",pix.valor.original.toLocaleString('pt-br',{minimumFractionDigits:2}))),/*#__PURE__*/React.createElement(SuccessContent,null,/*#__PURE__*/React.createElement(QRCode,{value:pixString}),/*#__PURE__*/React.createElement(CopyToClipboard,{text:pixString,onCopy:handleCopyQR},/*#__PURE__*/React.createElement(\"button\",{className:\"copy-button\",type:\"button\"},copied?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"Copiado\"),/*#__PURE__*/React.createElement(FaCheckCircle,{size:18})):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",null,\"Copiar c\\xF3digo QR\"),/*#__PURE__*/React.createElement(FaCopy,{size:18})))),/*#__PURE__*/React.createElement(\"span\",null,\"Para finalizar, basta realizar o pagamento escaneando ou colando o c\\xF3digo Pix acima :)\")));}export default CheckoutSuccess;","map":{"version":3,"names":["React","useState","useEffect","useContext","useHistory","QRCode","SuccessContent","Total","CopyToClipboard","FaCopy","FaCheckCircle","useDate","toast","AuthContext","CheckoutSuccess","props","pix","pixString","qrcode","copied","setCopied","history","user","socket","dateToClient","companyId","onCompanyPayment","data","action","success","concat","company","dueDate","setTimeout","push","on","off","handleCopyQR","createElement","Fragment","valor","original","toLocaleString","minimumFractionDigits","value","text","onCopy","className","type","size"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/CheckoutPage/CheckoutSuccess/CheckoutSuccess.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QRCode from 'react-qr-code';\r\nimport { SuccessContent, Total } from './style';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { FaCopy, FaCheckCircle } from 'react-icons/fa';\r\nimport { useDate } from \"../../../hooks/useDate\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"../../../context/Auth/AuthContext\";\r\n\r\nfunction CheckoutSuccess(props) {\r\n\r\n  const { pix } = props;\r\n  const [pixString,] = useState(pix.qrcode.qrcode);\r\n  const [copied, setCopied] = useState(false);\r\n  const history = useHistory();\r\n  //   const socketManager = useContext(SocketContext);\r\n  const { user, socket } = useContext(AuthContext);\r\n\r\n\r\n  const { dateToClient } = useDate();\r\n\r\n  useEffect(() => {\r\n    const companyId = user.companyId;\r\n    if (companyId) {\r\n      // const socket = socketManager.GetSocket();\r\n\r\n      const onCompanyPayment = (data) => {\r\n\r\n        if (data.action === \"CONCLUIDA\") {\r\n          toast.success(`Sua licença foi renovada até ${dateToClient(data.company.dueDate)}!`);\r\n          setTimeout(() => {\r\n            history.push(\"/\");\r\n          }, 4000);\r\n        }\r\n      }\r\n\r\n      socket.on(`company-${companyId}-payment`, onCompanyPayment);\r\n\r\n      return () => {\r\n        socket.off(`company-${companyId}-payment`, onCompanyPayment);\r\n      }\r\n    }\r\n  }, [socket]);\r\n\r\n  const handleCopyQR = () => {\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 1 * 1000);\r\n    setCopied(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Total>\r\n        <span>TOTAL</span>\r\n        <strong>R${pix.valor.original.toLocaleString('pt-br', { minimumFractionDigits: 2 })}</strong>\r\n      </Total>\r\n      <SuccessContent>\r\n        <QRCode value={pixString} />\r\n        <CopyToClipboard text={pixString} onCopy={handleCopyQR}>\r\n          <button className=\"copy-button\" type=\"button\">\r\n            {copied ? (\r\n              <>\r\n                <span>Copiado</span>\r\n                <FaCheckCircle size={18} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span>Copiar código QR</span>\r\n                <FaCopy size={18} />\r\n              </>\r\n            )}\r\n          </button>\r\n        </CopyToClipboard>\r\n        <span>\r\n          Para finalizar, basta realizar o pagamento escaneando ou colando o\r\n          código Pix acima :)\r\n        </span>\r\n      </SuccessContent>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default CheckoutSuccess;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}