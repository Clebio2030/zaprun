{"ast":null,"code":"import api,{openApi}from\"../../services/api\";const useSettings=()=>{const getAll=async params=>{const{data}=await api.request({url:\"/settings\",method:\"GET\",params});return data;};const update=async data=>{const{data:responseData}=await api.request({url:\"/settings/\".concat(data.key),method:\"PUT\",data});return responseData;};const get=async param=>{const{data}=await api.request({url:\"/setting/\".concat(param),method:\"GET\"});return data;};const getPublicSetting=async key=>{const params={token:\"wtV\"};const{data}=await openApi.request({url:\"/public-settings/\".concat(key),method:'GET',params});return data;};return{getAll,update,get,getPublicSetting};};export default useSettings;","map":{"version":3,"names":["api","openApi","useSettings","getAll","params","data","request","url","method","update","responseData","concat","key","get","param","getPublicSetting","token"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/hooks/useSettings/index.js"],"sourcesContent":["import api, { openApi } from \"../../services/api\";\r\n\r\nconst useSettings = () => {\r\n  const getAll = async (params) => {\r\n    const { data } = await api.request({\r\n      url: \"/settings\",\r\n      method: \"GET\",\r\n      params,\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const update = async (data) => {\r\n    const { data: responseData } = await api.request({\r\n      url: `/settings/${data.key}`,\r\n      method: \"PUT\",\r\n      data,\r\n    });\r\n    return responseData;\r\n  };\r\n\r\n  const get = async (param) => {\r\n    const { data } = await api.request({\r\n      url: `/setting/${param}`,\r\n      method: \"GET\",\r\n    });\r\n    return data;\r\n  };\r\n\r\n  const getPublicSetting = async (key) => {\r\n    const params = {\r\n      token: \"wtV\"\r\n    }\r\n\r\n    const { data } = await openApi.request({\r\n        url: `/public-settings/${key}`,\r\n        method: 'GET',\r\n        params\r\n    });\r\n    return data;\r\n  };\r\n\r\n  return {\r\n    getAll,\r\n    update,\r\n    get,\r\n    getPublicSetting,\r\n  };\r\n};\r\n\r\nexport default useSettings;\r\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,EAAIC,OAAO,KAAQ,oBAAoB,CAEjD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,MAAM,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC/B,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAL,GAAG,CAACM,OAAO,CAAC,CACjCC,GAAG,CAAE,WAAW,CAChBC,MAAM,CAAE,KAAK,CACbJ,MACF,CAAC,CAAC,CACF,MAAO,CAAAC,IAAI,CACb,CAAC,CAED,KAAM,CAAAI,MAAM,CAAG,KAAO,CAAAJ,IAAI,EAAK,CAC7B,KAAM,CAAEA,IAAI,CAAEK,YAAa,CAAC,CAAG,KAAM,CAAAV,GAAG,CAACM,OAAO,CAAC,CAC/CC,GAAG,cAAAI,MAAA,CAAeN,IAAI,CAACO,GAAG,CAAE,CAC5BJ,MAAM,CAAE,KAAK,CACbH,IACF,CAAC,CAAC,CACF,MAAO,CAAAK,YAAY,CACrB,CAAC,CAED,KAAM,CAAAG,GAAG,CAAG,KAAO,CAAAC,KAAK,EAAK,CAC3B,KAAM,CAAET,IAAK,CAAC,CAAG,KAAM,CAAAL,GAAG,CAACM,OAAO,CAAC,CACjCC,GAAG,aAAAI,MAAA,CAAcG,KAAK,CAAE,CACxBN,MAAM,CAAE,KACV,CAAC,CAAC,CACF,MAAO,CAAAH,IAAI,CACb,CAAC,CAED,KAAM,CAAAU,gBAAgB,CAAG,KAAO,CAAAH,GAAG,EAAK,CACtC,KAAM,CAAAR,MAAM,CAAG,CACbY,KAAK,CAAE,KACT,CAAC,CAED,KAAM,CAAEX,IAAK,CAAC,CAAG,KAAM,CAAAJ,OAAO,CAACK,OAAO,CAAC,CACnCC,GAAG,qBAAAI,MAAA,CAAsBC,GAAG,CAAE,CAC9BJ,MAAM,CAAE,KAAK,CACbJ,MACJ,CAAC,CAAC,CACF,MAAO,CAAAC,IAAI,CACb,CAAC,CAED,MAAO,CACLF,MAAM,CACNM,MAAM,CACNI,GAAG,CACHE,gBACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAb,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}