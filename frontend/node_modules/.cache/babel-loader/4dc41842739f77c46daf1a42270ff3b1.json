{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useField}from'formik';import Grid from'@material-ui/core/Grid';import{MuiPickersUtilsProvider,KeyboardDatePicker}from'@material-ui/pickers';import DateFnsUtils from'@date-io/date-fns';export default function DatePickerField(props){const[field,meta,helper]=useField(props);const{touched,error}=meta;const{setValue}=helper;const isError=touched&&error&&true;const{value}=field;const[selectedDate,setSelectedDate]=useState(null);useEffect(()=>{if(value){const date=new Date(value);setSelectedDate(date);}},[value]);function _onChange(date){if(date){setSelectedDate(date);try{const ISODateString=date.toISOString();setValue(ISODateString);}catch(error){setValue(date);}}else{setValue(date);}}return/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(MuiPickersUtilsProvider,{utils:DateFnsUtils},/*#__PURE__*/React.createElement(KeyboardDatePicker,Object.assign({},field,props,{value:selectedDate,onChange:_onChange,error:isError,invalidDateMessage:isError&&error,helperText:isError&&error}))));}","map":{"version":3,"names":["React","useState","useEffect","useField","Grid","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","DatePickerField","props","field","meta","helper","touched","error","setValue","isError","value","selectedDate","setSelectedDate","date","Date","_onChange","ISODateString","toISOString","createElement","container","utils","Object","assign","onChange","invalidDateMessage","helperText"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/FormFields/DatePickerField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useField } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nexport default function DatePickerField(props) {\r\n  const [field, meta, helper] = useField(props);\r\n  const { touched, error } = meta;\r\n  const { setValue } = helper;\r\n  const isError = touched && error && true;\r\n  const { value } = field;\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (value) {\r\n      const date = new Date(value);\r\n      setSelectedDate(date);\r\n    }\r\n  }, [value]);\r\n\r\n  function _onChange(date) {\r\n    if (date) {\r\n      setSelectedDate(date);\r\n      try {\r\n        const ISODateString = date.toISOString();\r\n        setValue(ISODateString);\r\n      } catch (error) {\r\n        setValue(date);\r\n      }\r\n    } else {\r\n      setValue(date);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          {...field}\r\n          {...props}\r\n          value={selectedDate}\r\n          onChange={_onChange}\r\n          error={isError}\r\n          invalidDateMessage={isError && error}\r\n          helperText={isError && error}\r\n        />\r\n      </MuiPickersUtilsProvider>\r\n    </Grid>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,KAAQ,QAAQ,CACjC,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,OACEC,uBAAuB,CACvBC,kBAAkB,KACb,sBAAsB,CAC7B,MAAO,CAAAC,YAAY,KAAM,mBAAmB,CAE5C,cAAe,SAAS,CAAAC,eAAeA,CAACC,KAAK,CAAE,CAC7C,KAAM,CAACC,KAAK,CAAEC,IAAI,CAAEC,MAAM,CAAC,CAAGT,QAAQ,CAACM,KAAK,CAAC,CAC7C,KAAM,CAAEI,OAAO,CAAEC,KAAM,CAAC,CAAGH,IAAI,CAC/B,KAAM,CAAEI,QAAS,CAAC,CAAGH,MAAM,CAC3B,KAAM,CAAAI,OAAO,CAAGH,OAAO,EAAIC,KAAK,EAAI,IAAI,CACxC,KAAM,CAAEG,KAAM,CAAC,CAAGP,KAAK,CACvB,KAAM,CAACQ,YAAY,CAAEC,eAAe,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd,GAAIe,KAAK,CAAE,CACT,KAAM,CAAAG,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACJ,KAAK,CAAC,CAC5BE,eAAe,CAACC,IAAI,CAAC,CACvB,CACF,CAAC,CAAE,CAACH,KAAK,CAAC,CAAC,CAEX,QAAS,CAAAK,SAASA,CAACF,IAAI,CAAE,CACvB,GAAIA,IAAI,CAAE,CACRD,eAAe,CAACC,IAAI,CAAC,CACrB,GAAI,CACF,KAAM,CAAAG,aAAa,CAAGH,IAAI,CAACI,WAAW,CAAC,CAAC,CACxCT,QAAQ,CAACQ,aAAa,CAAC,CACzB,CAAE,MAAOT,KAAK,CAAE,CACdC,QAAQ,CAACK,IAAI,CAAC,CAChB,CACF,CAAC,IAAM,CACLL,QAAQ,CAACK,IAAI,CAAC,CAChB,CACF,CAEA,mBACEpB,KAAA,CAAAyB,aAAA,CAACrB,IAAI,EAACsB,SAAS,oBACb1B,KAAA,CAAAyB,aAAA,CAACpB,uBAAuB,EAACsB,KAAK,CAAEpB,YAAa,eAC3CP,KAAA,CAAAyB,aAAA,CAACnB,kBAAkB,CAAAsB,MAAA,CAAAC,MAAA,IACbnB,KAAK,CACLD,KAAK,EACTQ,KAAK,CAAEC,YAAa,CACpBY,QAAQ,CAAER,SAAU,CACpBR,KAAK,CAAEE,OAAQ,CACfe,kBAAkB,CAAEf,OAAO,EAAIF,KAAM,CACrCkB,UAAU,CAAEhB,OAAO,EAAIF,KAAM,EAC9B,CACsB,CACrB,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module"}