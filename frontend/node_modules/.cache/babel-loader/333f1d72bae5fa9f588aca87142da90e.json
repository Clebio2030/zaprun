{"ast":null,"code":"import React,{useContext}from\"react\";import toastError from\"../../errors/toastError\";import{Checkbox}from\"@mui/material\";import{ForwardMessageContext}from\"../../context/ForwarMessage/ForwardMessageContext\";const SelectMessageCheckbox=_ref=>{let{message}=_ref;const[isChecked,setIsChecked]=React.useState(false);const{showSelectMessageCheckbox,setSelectedMessages,selectedMessages}=useContext(ForwardMessageContext);const handleSelectMessage=(e,message)=>{const list=selectedMessages;if(e.target.checked){// if (list.length >= 4) {\n//   toastError(\"Não é possível selecionar mais de 4 mensagens para encaminhar.\");\n//   return;\n// }\nsetIsChecked(true);list.push(message);}else{const index=list.findIndex(m=>m.id===message.id);list.splice(index,1);setIsChecked(true);}setSelectedMessages(list);};if(showSelectMessageCheckbox){return/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",checked:isChecked,onChange:e=>handleSelectMessage(e,message)});}else{return null;}};export default SelectMessageCheckbox;","map":{"version":3,"names":["React","useContext","toastError","Checkbox","ForwardMessageContext","SelectMessageCheckbox","_ref","message","isChecked","setIsChecked","useState","showSelectMessageCheckbox","setSelectedMessages","selectedMessages","handleSelectMessage","e","list","target","checked","push","index","findIndex","m","id","splice","createElement","color","onChange"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/MessagesList/SelectMessageCheckbox.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport toastError  from \"../../errors/toastError\";\r\nimport { Checkbox } from \"@mui/material\";\r\nimport { ForwardMessageContext } from \"../../context/ForwarMessage/ForwardMessageContext\";\r\n\r\nconst SelectMessageCheckbox = ({ message }) => {\r\n    const [isChecked, setIsChecked] = React.useState(false);\r\n    const { showSelectMessageCheckbox,\r\n      setSelectedMessages,\r\n      selectedMessages,\r\n   } = useContext(ForwardMessageContext);\r\n\r\n    const handleSelectMessage = (e, message) => {\r\n        const list = selectedMessages;\r\n        if (e.target.checked) {\r\n          // if (list.length >= 4) {\r\n          //   toastError(\"Não é possível selecionar mais de 4 mensagens para encaminhar.\");\r\n          //   return;\r\n          // }\r\n          setIsChecked(true);\r\n          list.push(message);\r\n        } else {\r\n          const index = list.findIndex((m) => m.id === message.id);\r\n          list.splice(index, 1);\r\n          setIsChecked(true);\r\n        }\r\n        setSelectedMessages(list);\r\n      }\r\n\r\n    if (showSelectMessageCheckbox) {\r\n        return <Checkbox color=\"primary\" checked={isChecked} onChange={(e) => handleSelectMessage(e, message)}  />;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default SelectMessageCheckbox;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAO,CAAAC,UAAU,KAAO,yBAAyB,CACjD,OAASC,QAAQ,KAAQ,eAAe,CACxC,OAASC,qBAAqB,KAAQ,mDAAmD,CAEzF,KAAM,CAAAC,qBAAqB,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAEC,yBAAyB,CAC/BC,mBAAmB,CACnBC,gBACH,CAAC,CAAGZ,UAAU,CAACG,qBAAqB,CAAC,CAEpC,KAAM,CAAAU,mBAAmB,CAAGA,CAACC,CAAC,CAAER,OAAO,GAAK,CACxC,KAAM,CAAAS,IAAI,CAAGH,gBAAgB,CAC7B,GAAIE,CAAC,CAACE,MAAM,CAACC,OAAO,CAAE,CACpB;AACA;AACA;AACA;AACAT,YAAY,CAAC,IAAI,CAAC,CAClBO,IAAI,CAACG,IAAI,CAACZ,OAAO,CAAC,CACpB,CAAC,IAAM,CACL,KAAM,CAAAa,KAAK,CAAGJ,IAAI,CAACK,SAAS,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,GAAKhB,OAAO,CAACgB,EAAE,CAAC,CACxDP,IAAI,CAACQ,MAAM,CAACJ,KAAK,CAAE,CAAC,CAAC,CACrBX,YAAY,CAAC,IAAI,CAAC,CACpB,CACAG,mBAAmB,CAACI,IAAI,CAAC,CAC3B,CAAC,CAEH,GAAIL,yBAAyB,CAAE,CAC3B,mBAAOX,KAAA,CAAAyB,aAAA,CAACtB,QAAQ,EAACuB,KAAK,CAAC,SAAS,CAACR,OAAO,CAAEV,SAAU,CAACmB,QAAQ,CAAGZ,CAAC,EAAKD,mBAAmB,CAACC,CAAC,CAAER,OAAO,CAAE,CAAG,CAAC,CAC9G,CAAC,IAAM,CACH,MAAO,KAAI,CACf,CACJ,CAAC,CAED,cAAe,CAAAF,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}