{"ast":null,"code":"import React from'react';import{at}from'lodash';import{useField}from'formik';import{Checkbox,FormControl,FormControlLabel,FormHelperText}from'@material-ui/core';export default function CheckboxField(props){const{label,...rest}=props;const[field,meta,helper]=useField(props);const{setValue}=helper;function _renderHelperText(){const[touched,error]=at(meta,'touched','error');if(touched&&error){return/*#__PURE__*/React.createElement(FormHelperText,null,error);}}function _onChange(e){setValue(e.target.checked);}return/*#__PURE__*/React.createElement(FormControl,rest,/*#__PURE__*/React.createElement(FormControlLabel,{value:field.checked,checked:field.checked,control:/*#__PURE__*/React.createElement(Checkbox,Object.assign({},field,{onChange:_onChange})),label:label}),_renderHelperText());}","map":{"version":3,"names":["React","at","useField","Checkbox","FormControl","FormControlLabel","FormHelperText","CheckboxField","props","label","rest","field","meta","helper","setValue","_renderHelperText","touched","error","createElement","_onChange","e","target","checked","value","control","Object","assign","onChange"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/components/FormFields/CheckboxField.js"],"sourcesContent":["import React from 'react';\r\nimport { at } from 'lodash';\r\nimport { useField } from 'formik';\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nexport default function CheckboxField(props) {\r\n  const { label, ...rest } = props;\r\n  const [field, meta, helper] = useField(props);\r\n  const { setValue } = helper;\r\n\r\n  function _renderHelperText() {\r\n    const [touched, error] = at(meta, 'touched', 'error');\r\n    if (touched && error) {\r\n      return <FormHelperText>{error}</FormHelperText>;\r\n    }\r\n  }\r\n\r\n  function _onChange(e) {\r\n    setValue(e.target.checked);\r\n  }\r\n\r\n  return (\r\n    <FormControl {...rest}>\r\n      <FormControlLabel\r\n        value={field.checked}\r\n        checked={field.checked}\r\n        control={<Checkbox {...field} onChange={_onChange} />}\r\n        label={label}\r\n      />\r\n      {_renderHelperText()}\r\n    </FormControl>\r\n  );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,EAAE,KAAQ,QAAQ,CAC3B,OAASC,QAAQ,KAAQ,QAAQ,CACjC,OACEC,QAAQ,CACRC,WAAW,CACXC,gBAAgB,CAChBC,cAAc,KACT,mBAAmB,CAE1B,cAAe,SAAS,CAAAC,aAAaA,CAACC,KAAK,CAAE,CAC3C,KAAM,CAAEC,KAAK,CAAE,GAAGC,IAAK,CAAC,CAAGF,KAAK,CAChC,KAAM,CAACG,KAAK,CAAEC,IAAI,CAAEC,MAAM,CAAC,CAAGX,QAAQ,CAACM,KAAK,CAAC,CAC7C,KAAM,CAAEM,QAAS,CAAC,CAAGD,MAAM,CAE3B,QAAS,CAAAE,iBAAiBA,CAAA,CAAG,CAC3B,KAAM,CAACC,OAAO,CAAEC,KAAK,CAAC,CAAGhB,EAAE,CAACW,IAAI,CAAE,SAAS,CAAE,OAAO,CAAC,CACrD,GAAII,OAAO,EAAIC,KAAK,CAAE,CACpB,mBAAOjB,KAAA,CAAAkB,aAAA,CAACZ,cAAc,MAAEW,KAAsB,CAAC,CACjD,CACF,CAEA,QAAS,CAAAE,SAASA,CAACC,CAAC,CAAE,CACpBN,QAAQ,CAACM,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,CAC5B,CAEA,mBACEtB,KAAA,CAAAkB,aAAA,CAACd,WAAW,CAAKM,IAAI,cACnBV,KAAA,CAAAkB,aAAA,CAACb,gBAAgB,EACfkB,KAAK,CAAEZ,KAAK,CAACW,OAAQ,CACrBA,OAAO,CAAEX,KAAK,CAACW,OAAQ,CACvBE,OAAO,cAAExB,KAAA,CAAAkB,aAAA,CAACf,QAAQ,CAAAsB,MAAA,CAAAC,MAAA,IAAKf,KAAK,EAAEgB,QAAQ,CAAER,SAAU,EAAE,CAAE,CACtDV,KAAK,CAAEA,KAAM,CACd,CAAC,CACDM,iBAAiB,CAAC,CACR,CAAC,CAElB","ignoreList":[]},"metadata":{},"sourceType":"module"}