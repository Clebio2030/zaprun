{"ast":null,"code":"import React,{useState,useEffect,useReducer,useContext}from\"react\";import{toast}from\"react-toastify\";import{useHistory}from\"react-router-dom\";// import { SocketContext } from \"../../context/Socket/SocketContext\";\nimport{makeStyles}from\"@material-ui/core/styles\";import Paper from\"@material-ui/core/Paper\";import Button from\"@material-ui/core/Button\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import MainContainer from\"../../components/MainContainer\";import MainHeader from\"../../components/MainHeader\";import Title from\"../../components/Title\";import api from\"../../services/api\";import{i18n}from\"../../translate/i18n\";import TableRowSkeleton from\"../../components/TableRowSkeleton\";import CompanyModal from\"../../components/CompaniesModal\";import ConfirmationModal from\"../../components/ConfirmationModal\";import toastError from\"../../errors/toastError\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{useDate}from\"../../hooks/useDate\";import usePlans from\"../../hooks/usePlans\";import moment from\"moment\";const reducer=(state,action)=>{if(action.type===\"LOAD_COMPANIES\"){const companies=action.payload;const newCompanies=[];companies.forEach(company=>{const companyIndex=state.findIndex(u=>u.id===company.id);if(companyIndex!==-1){state[companyIndex]=company;}else{newCompanies.push(company);}});return[...state,...newCompanies];}if(action.type===\"UPDATE_COMPANIES\"){const company=action.payload;const companyIndex=state.findIndex(u=>u.id===company.id);if(companyIndex!==-1){state[companyIndex]=company;return[...state];}else{return[company,...state];}}if(action.type===\"DELETE_COMPANIES\"){const companyId=action.payload;const companyIndex=state.findIndex(u=>u.id===companyId);if(companyIndex!==-1){state.splice(companyIndex,1);}return[...state];}if(action.type===\"RESET\"){return[];}};const useStyles=makeStyles(theme=>({mainPaper:{flex:1,padding:theme.spacing(1),overflowY:\"scroll\",...theme.scrollbarStyles}}));const Companies=()=>{const classes=useStyles();const history=useHistory();const[loading,setLoading]=useState(false);const[pageNumber,setPageNumber]=useState(1);const[hasMore,setHasMore]=useState(false);const[selectedCompany,setSelectedCompany]=useState(null);const[deletingCompany,setDeletingCompany]=useState(null);const[companyModalOpen,setCompanyModalOpen]=useState(false);const[confirmModalOpen,setConfirmModalOpen]=useState(false);const[searchParam,setSearchParam]=useState(\"\");const[companies,dispatch]=useReducer(reducer,[]);const{dateToClient,datetimeToClient}=useDate();// const { getPlanCompany } = usePlans();\n//   const socketManager = useContext(SocketContext);\nconst{user,socket}=useContext(AuthContext);useEffect(()=>{async function fetchData(){if(!user.super){toast.error(\"Esta empresa não possui permissão para acessar essa página! Estamos lhe redirecionando.\");setTimeout(()=>{history.push(\"/\");},1000);}}fetchData();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);useEffect(()=>{dispatch({type:\"RESET\"});setPageNumber(1);},[searchParam]);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchCompanies=async()=>{try{const{data}=await api.get(\"/companiesPlan/\",{params:{searchParam,pageNumber}});dispatch({type:\"LOAD_COMPANIES\",payload:data.companies});setHasMore(data.hasMore);setLoading(false);}catch(err){toastError(err);}};fetchCompanies();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,pageNumber]);//     useEffect(() => {\n//         const companyId = user.companyId;\n//   //    const socket = socketManager.GetSocket();\n//         // const socket = socketConnection();\n//         return () => {\n//             socket.disconnect();\n//         };\n//     }, []);\nconst handleOpenCompanyModal=()=>{setSelectedCompany(null);setCompanyModalOpen(true);};const handleCloseCompanyModal=()=>{setSelectedCompany(null);setCompanyModalOpen(false);};const handleSearch=event=>{setSearchParam(event.target.value.toLowerCase());};const handleEditCompany=company=>{setSelectedCompany(company);setCompanyModalOpen(true);};const handleDeleteCompany=async companyId=>{try{await api.delete(\"/companies/\".concat(companyId));toast.success(i18n.t(\"compaies.toasts.deleted\"));}catch(err){toastError(err);}setDeletingCompany(null);setSearchParam(\"\");setPageNumber(1);};const loadMore=()=>{setPageNumber(prevState=>prevState+1);};const handleScroll=e=>{if(!hasMore||loading)return;const{scrollTop,scrollHeight,clientHeight}=e.currentTarget;if(scrollHeight-(scrollTop+100)<clientHeight){loadMore();}};const renderStatus=row=>{return row.status===false?\"Não\":\"Sim\";};const renderPlanValue=row=>{return row.planId!==null?row.plan.amount?row.plan.amount.toLocaleString('pt-br',{minimumFractionDigits:2}):'00.00':\"-\";};const renderWhatsapp=row=>{return row.useWhatsapp===false?\"Não\":\"Sim\";};const renderFacebook=row=>{return row.useFacebook===false?\"Não\":\"Sim\";};const renderInstagram=row=>{return row.useInstagram===false?\"Não\":\"Sim\";};const renderCampaigns=row=>{return row.useCampaigns===false?\"Não\":\"Sim\";};const renderSchedules=row=>{return row.useSchedules===false?\"Não\":\"Sim\";};const renderInternalChat=row=>{return row.useInternalChat===false?\"Não\":\"Sim\";};const renderExternalApi=row=>{return row.useExternalApi===false?\"Não\":\"Sim\";};const rowStyle=record=>{if(moment(record.dueDate).isValid()){const now=moment();const dueDate=moment(record.dueDate);const diff=dueDate.diff(now,\"days\");if(diff>=1&&diff<=5){return{backgroundColor:\"#fffead\"};}if(diff<=0){return{backgroundColor:\"#fa8c8c\"};}// else {\n//   return { backgroundColor: \"#affa8c\" };\n// }\n}return{};};return/*#__PURE__*/React.createElement(MainContainer,null,/*#__PURE__*/React.createElement(ConfirmationModal,{title:deletingCompany&&\"\".concat(i18n.t(\"compaies.confirmationModal.deleteTitle\"),\" \").concat(deletingCompany.name,\"?\"),open:confirmModalOpen,onClose:setConfirmModalOpen,onConfirm:()=>handleDeleteCompany(deletingCompany.id)},i18n.t(\"compaies.confirmationModal.deleteMessage\")),/*#__PURE__*/React.createElement(CompanyModal,{open:companyModalOpen,onClose:handleCloseCompanyModal,\"aria-labelledby\":\"form-dialog-title\",companyId:selectedCompany&&selectedCompany.id}),/*#__PURE__*/React.createElement(MainHeader,null,/*#__PURE__*/React.createElement(Title,null,i18n.t(\"compaies.title\"),\" (\",companies.length,\")\")),/*#__PURE__*/React.createElement(Paper,{className:classes.mainPaper,variant:\"outlined\",onScroll:handleScroll},/*#__PURE__*/React.createElement(Table,{size:\"small\"},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.ID\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.status\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.name\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.email\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.namePlan\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.value\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.createdAt\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.dueDate\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},i18n.t(\"compaies.table.lastLogin\")),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Tamanho da pasta\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Total de arquivos\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"Ultimo update\"))),/*#__PURE__*/React.createElement(TableBody,null,/*#__PURE__*/React.createElement(React.Fragment,null,companies.map(company=>{var _company$plan;return/*#__PURE__*/React.createElement(TableRow,{style:rowStyle(company),key:company.id},/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.id),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},renderStatus(company.status)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.email),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company===null||company===void 0?void 0:(_company$plan=company.plan)===null||_company$plan===void 0?void 0:_company$plan.name),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},\"R$ \",renderPlanValue(company)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},dateToClient(company.createdAt)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},dateToClient(company.dueDate),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,company.recurrence)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},datetimeToClient(company.lastLogin)),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.folderSize),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},company.numberFileFolder),/*#__PURE__*/React.createElement(TableCell,{align:\"center\"},datetimeToClient(company.updatedAtFolder)));}),loading&&/*#__PURE__*/React.createElement(TableRowSkeleton,{columns:4}))))));};export default Companies;","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","toast","useHistory","makeStyles","Paper","Button","Table","TableBody","TableCell","TableHead","TableRow","MainContainer","MainHeader","Title","api","i18n","TableRowSkeleton","CompanyModal","ConfirmationModal","toastError","AuthContext","useDate","usePlans","moment","reducer","state","action","type","companies","payload","newCompanies","forEach","company","companyIndex","findIndex","u","id","push","companyId","splice","useStyles","theme","mainPaper","flex","padding","spacing","overflowY","scrollbarStyles","Companies","classes","history","loading","setLoading","pageNumber","setPageNumber","hasMore","setHasMore","selectedCompany","setSelectedCompany","deletingCompany","setDeletingCompany","companyModalOpen","setCompanyModalOpen","confirmModalOpen","setConfirmModalOpen","searchParam","setSearchParam","dispatch","dateToClient","datetimeToClient","user","socket","fetchData","super","error","setTimeout","delayDebounceFn","fetchCompanies","data","get","params","err","clearTimeout","handleOpenCompanyModal","handleCloseCompanyModal","handleSearch","event","target","value","toLowerCase","handleEditCompany","handleDeleteCompany","delete","concat","success","t","loadMore","prevState","handleScroll","e","scrollTop","scrollHeight","clientHeight","currentTarget","renderStatus","row","status","renderPlanValue","planId","plan","amount","toLocaleString","minimumFractionDigits","renderWhatsapp","useWhatsapp","renderFacebook","useFacebook","renderInstagram","useInstagram","renderCampaigns","useCampaigns","renderSchedules","useSchedules","renderInternalChat","useInternalChat","renderExternalApi","useExternalApi","rowStyle","record","dueDate","isValid","now","diff","backgroundColor","createElement","title","name","open","onClose","onConfirm","length","className","variant","onScroll","size","align","Fragment","map","_company$plan","style","key","email","createdAt","recurrence","lastLogin","folderSize","numberFileFolder","updatedAtFolder","columns"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/pages/Companies/index.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\n// import { SocketContext } from \"../../context/Socket/SocketContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport MainContainer from \"../../components/MainContainer\";\r\nimport MainHeader from \"../../components/MainHeader\";\r\n\r\nimport Title from \"../../components/Title\";\r\n\r\nimport api from \"../../services/api\";\r\nimport { i18n } from \"../../translate/i18n\";\r\nimport TableRowSkeleton from \"../../components/TableRowSkeleton\";\r\nimport CompanyModal from \"../../components/CompaniesModal\";\r\nimport ConfirmationModal from \"../../components/ConfirmationModal\";\r\nimport toastError from \"../../errors/toastError\";\r\nimport { AuthContext } from \"../../context/Auth/AuthContext\";\r\nimport { useDate } from \"../../hooks/useDate\";\r\nimport usePlans from \"../../hooks/usePlans\";\r\nimport moment from \"moment\";\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === \"LOAD_COMPANIES\") {\r\n        const companies = action.payload;\r\n        const newCompanies = [];\r\n\r\n        companies.forEach((company) => {\r\n            const companyIndex = state.findIndex((u) => u.id === company.id);\r\n            if (companyIndex !== -1) {\r\n                state[companyIndex] = company;\r\n            } else {\r\n                newCompanies.push(company);\r\n            }\r\n        });\r\n\r\n        return [...state, ...newCompanies];\r\n    }\r\n\r\n    if (action.type === \"UPDATE_COMPANIES\") {\r\n        const company = action.payload;\r\n        const companyIndex = state.findIndex((u) => u.id === company.id);\r\n\r\n        if (companyIndex !== -1) {\r\n            state[companyIndex] = company;\r\n            return [...state];\r\n        } else {\r\n            return [company, ...state];\r\n        }\r\n    }\r\n\r\n    if (action.type === \"DELETE_COMPANIES\") {\r\n        const companyId = action.payload;\r\n\r\n        const companyIndex = state.findIndex((u) => u.id === companyId);\r\n        if (companyIndex !== -1) {\r\n            state.splice(companyIndex, 1);\r\n        }\r\n        return [...state];\r\n    }\r\n\r\n    if (action.type === \"RESET\") {\r\n        return [];\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainPaper: {\r\n        flex: 1,\r\n        padding: theme.spacing(1),\r\n        overflowY: \"scroll\",\r\n        ...theme.scrollbarStyles,\r\n    },\r\n}));\r\n\r\nconst Companies = () => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const [selectedCompany, setSelectedCompany] = useState(null);\r\n    const [deletingCompany, setDeletingCompany] = useState(null);\r\n    const [companyModalOpen, setCompanyModalOpen] = useState(false);\r\n    const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n    const [searchParam, setSearchParam] = useState(\"\");\r\n    const [companies, dispatch] = useReducer(reducer, []);\r\n    const { dateToClient, datetimeToClient } = useDate();\r\n\r\n    // const { getPlanCompany } = usePlans();\r\n  //   const socketManager = useContext(SocketContext);\r\n    const { user, socket } = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (!user.super) {\r\n                toast.error(\"Esta empresa não possui permissão para acessar essa página! Estamos lhe redirecionando.\");\r\n                setTimeout(() => {\r\n                    history.push(`/`)\r\n                }, 1000);\r\n            }\r\n        }\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"RESET\" });\r\n        setPageNumber(1);\r\n    }, [searchParam]);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const delayDebounceFn = setTimeout(() => {\r\n            const fetchCompanies = async () => {\r\n                try {\r\n                    const { data } = await api.get(\"/companiesPlan/\", {\r\n                        params: { searchParam, pageNumber },\r\n                    });\r\n                    dispatch({ type: \"LOAD_COMPANIES\", payload: data.companies });\r\n                    setHasMore(data.hasMore);\r\n                    setLoading(false);\r\n                } catch (err) {\r\n                    toastError(err);\r\n                }\r\n            };\r\n            fetchCompanies();\r\n        }, 500);\r\n        return () => clearTimeout(delayDebounceFn);\r\n    }, [searchParam, pageNumber]);\r\n\r\n//     useEffect(() => {\r\n//         const companyId = user.companyId;\r\n//   //    const socket = socketManager.GetSocket();\r\n//         // const socket = socketConnection();\r\n\r\n//         return () => {\r\n//             socket.disconnect();\r\n//         };\r\n//     }, []);\r\n\r\n    const handleOpenCompanyModal = () => {\r\n        setSelectedCompany(null);\r\n        setCompanyModalOpen(true);\r\n    };\r\n\r\n    const handleCloseCompanyModal = () => {\r\n        setSelectedCompany(null);\r\n        setCompanyModalOpen(false);\r\n    };\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchParam(event.target.value.toLowerCase());\r\n    };\r\n\r\n    const handleEditCompany = (company) => {\r\n        setSelectedCompany(company);\r\n        setCompanyModalOpen(true);\r\n    };\r\n\r\n    const handleDeleteCompany = async (companyId) => {\r\n        try {\r\n            await api.delete(`/companies/${companyId}`);\r\n            toast.success(i18n.t(\"compaies.toasts.deleted\"));\r\n        } catch (err) {\r\n            toastError(err);\r\n        }\r\n        setDeletingCompany(null);\r\n        setSearchParam(\"\");\r\n        setPageNumber(1);\r\n    };\r\n\r\n    const loadMore = () => {\r\n        setPageNumber((prevState) => prevState + 1);\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        if (!hasMore || loading) return;\r\n        const { scrollTop, scrollHeight, clientHeight } = e.currentTarget;\r\n        if (scrollHeight - (scrollTop + 100) < clientHeight) {\r\n            loadMore();\r\n        }\r\n    };\r\n\r\n    const renderStatus = (row) => {\r\n        return row.status === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderPlanValue = (row) => {\r\n        return row.planId !== null ? row.plan.amount ? row.plan.amount.toLocaleString('pt-br', { minimumFractionDigits: 2 }) : '00.00' : \"-\";\r\n    };\r\n\r\n    const renderWhatsapp = (row) => {\r\n        return row.useWhatsapp === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderFacebook = (row) => {\r\n        return row.useFacebook === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderInstagram = (row) => {\r\n        return row.useInstagram === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderCampaigns = (row) => {\r\n        return row.useCampaigns === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderSchedules = (row) => {\r\n        return row.useSchedules === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderInternalChat = (row) => {\r\n        return row.useInternalChat === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const renderExternalApi = (row) => {\r\n        return row.useExternalApi === false ? \"Não\" : \"Sim\";\r\n    };\r\n\r\n    const rowStyle = (record) => {\r\n        if (moment(record.dueDate).isValid()) {\r\n            const now = moment();\r\n            const dueDate = moment(record.dueDate);\r\n            const diff = dueDate.diff(now, \"days\");\r\n            if (diff >= 1 && diff <= 5) {\r\n                return { backgroundColor: \"#fffead\" };\r\n            }\r\n            if (diff <= 0) {\r\n                return { backgroundColor: \"#fa8c8c\" };\r\n            }\r\n            // else {\r\n            //   return { backgroundColor: \"#affa8c\" };\r\n            // }\r\n        }\r\n        return {};\r\n    };\r\n\r\n    return (\r\n        <MainContainer>\r\n            <ConfirmationModal\r\n                title={\r\n                    deletingCompany &&\r\n                    `${i18n.t(\"compaies.confirmationModal.deleteTitle\")} ${deletingCompany.name}?`\r\n                }\r\n                open={confirmModalOpen}\r\n                onClose={setConfirmModalOpen}\r\n                onConfirm={() => handleDeleteCompany(deletingCompany.id)}\r\n            >\r\n                {i18n.t(\"compaies.confirmationModal.deleteMessage\")}\r\n            </ConfirmationModal>\r\n            <CompanyModal\r\n                open={companyModalOpen}\r\n                onClose={handleCloseCompanyModal}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                companyId={selectedCompany && selectedCompany.id}\r\n            />\r\n            <MainHeader>\r\n                <Title>{i18n.t(\"compaies.title\")} ({companies.length})</Title>\r\n                {/* <MainHeaderButtonsWrapper>\r\n                    <TextField\r\n                        placeholder={i18n.t(\"contacts.searchPlaceholder\")}\r\n                        type=\"search\"\r\n                        value={searchParam}\r\n                        onChange={handleSearch}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon style={{ color: \"gray\" }} />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleOpenCompanyModal}\r\n                    >\r\n                        {i18n.t(\"compaies.buttons.add\")}\r\n                    </Button>\r\n                </MainHeaderButtonsWrapper> */}\r\n            </MainHeader>\r\n            <Paper\r\n                className={classes.mainPaper}\r\n                variant=\"outlined\"\r\n                onScroll={handleScroll}\r\n            >\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.ID\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.status\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.name\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.email\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.namePlan\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.value\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.createdAt\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.dueDate\")}</TableCell>\r\n                            <TableCell align=\"center\">{i18n.t(\"compaies.table.lastLogin\")}</TableCell>\r\n                            <TableCell align=\"center\">Tamanho da pasta</TableCell>\r\n                            <TableCell align=\"center\">Total de arquivos</TableCell>\r\n                            <TableCell align=\"center\">Ultimo update</TableCell>\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.numberAttendants\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.numberConections\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.numberQueues\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useWhatsapp\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useFacebook\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useInstagram\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useCampaigns\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useExternalApi\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useInternalChat\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.useSchedules\")}</TableCell> */}\r\n                            {/* <TableCell align=\"center\">{i18n.t(\"compaies.table.actions\")}</TableCell> */}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <>\r\n                            {companies.map((company) => (\r\n                                <TableRow style={rowStyle(company)} key={company.id}>\r\n                                    <TableCell align=\"center\">{company.id}</TableCell>\r\n                                    <TableCell align=\"center\">{renderStatus(company.status)}</TableCell>\r\n                                    <TableCell align=\"center\">{company.name}</TableCell>\r\n                                    <TableCell align=\"center\">{company.email}</TableCell>\r\n                                    <TableCell align=\"center\">{company?.plan?.name}</TableCell>\r\n                                    <TableCell align=\"center\">R$ {renderPlanValue(company)}</TableCell>\r\n                                    <TableCell align=\"center\">{dateToClient(company.createdAt)}</TableCell>\r\n                                    <TableCell align=\"center\">{dateToClient(company.dueDate)}<br /><span>{company.recurrence}</span></TableCell>\r\n                                    <TableCell align=\"center\">{datetimeToClient(company.lastLogin)}</TableCell>\r\n                                    <TableCell align=\"center\">{company.folderSize}</TableCell>\r\n                                    <TableCell align=\"center\">{company.numberFileFolder}</TableCell>\r\n                                    <TableCell align=\"center\">{datetimeToClient(company.updatedAtFolder)}</TableCell>\r\n                                    {/* <TableCell align=\"center\">{company.plan.users}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{company.plan.connections}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{company.plan.queues}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderWhatsapp(company.plan.useWhatsapp)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderFacebook(company.plan.useFacebook)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderInstagram(company.plan.useInstagram)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderCampaigns(company.plan.useCampaigns)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderExternalApi(company.plan.useExternalApi)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderInternalChat(company.plan.useInternalChat)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">{renderSchedules(company.plan.useSchedules)}</TableCell> */}\r\n                                    {/* <TableCell align=\"center\">\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => handleEditCompany(company)}\r\n                                        >\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={(e) => {\r\n                                                setConfirmModalOpen(true);\r\n                                                setDeletingCompany(company);\r\n                                            }}\r\n                                        >\r\n                                            <DeleteOutlineIcon />\r\n                                        </IconButton>\r\n                                    </TableCell> */}\r\n                                </TableRow>\r\n                            ))}\r\n                            {loading && <TableRowSkeleton columns={4} />}\r\n                        </>\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        </MainContainer>\r\n    );\r\n};\r\n\r\nexport default Companies;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}