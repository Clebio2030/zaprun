{"ast":null,"code":"import{useState,useEffect}from\"react\";import toastError from\"../../errors/toastError\";import{format,sub}from'date-fns';import api from\"../../services/api\";const useTickets=_ref=>{let{searchParam,tags,users,pageNumber,status,date,updatedAt,showAll,queueIds,withUnreadMessages,whatsappIds,statusFilter,forceSearch,userFilter,sortTickets,searchOnMessages}=_ref;const[loading,setLoading]=useState(true);const[hasMore,setHasMore]=useState(false);const[tickets,setTickets]=useState([]);const[count,setCount]=useState(0);useEffect(()=>{setLoading(true);const delayDebounceFn=setTimeout(()=>{const fetchTickets=async()=>{if(userFilter===undefined||userFilter===null){try{const{data}=await api.get(\"/tickets\",{params:{searchParam,pageNumber,tags,users,status,date,updatedAt,showAll,queueIds,withUnreadMessages,whatsapps:whatsappIds,statusFilter,sortTickets,searchOnMessages}});let tickets=[];tickets=data.tickets;setTickets(tickets);setHasMore(data.hasMore);setCount(data.count);setLoading(false);}catch(err){setLoading(false);toastError(err);}}else{try{const{data}=await api.get(\"/dashboard/moments\",{params:{status,showAll,queueIds,dateStart:format(sub(new Date(),{days:30}),'yyyy-MM-dd'),dateEnd:format(new Date(),'yyyy-MM-dd'),userId:userFilter}});let tickets=[];tickets=data.filter(item=>item.userId==userFilter);setTickets(tickets);setHasMore(null);setLoading(false);}catch(err){setLoading(false);toastError(err);}}};fetchTickets();},500);return()=>clearTimeout(delayDebounceFn);},[searchParam,tags,users,pageNumber,status,date,updatedAt,showAll,queueIds,withUnreadMessages,whatsappIds,statusFilter,forceSearch,sortTickets,searchOnMessages]);return{tickets,loading,hasMore,count};};export default useTickets;","map":{"version":3,"names":["useState","useEffect","toastError","format","sub","api","useTickets","_ref","searchParam","tags","users","pageNumber","status","date","updatedAt","showAll","queueIds","withUnreadMessages","whatsappIds","statusFilter","forceSearch","userFilter","sortTickets","searchOnMessages","loading","setLoading","hasMore","setHasMore","tickets","setTickets","count","setCount","delayDebounceFn","setTimeout","fetchTickets","undefined","data","get","params","whatsapps","err","dateStart","Date","days","dateEnd","userId","filter","item","clearTimeout"],"sources":["C:/ProjectsCode/ZapRun/ZapRun/frontend/src/hooks/useTickets/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport toastError from \"../../errors/toastError\";\r\nimport { format, sub } from 'date-fns'\r\nimport api from \"../../services/api\";\r\n\r\nconst useTickets = ({\r\n  searchParam,\r\n  tags,\r\n  users,\r\n  pageNumber,\r\n  status,\r\n  date,\r\n  updatedAt,\r\n  showAll,\r\n  queueIds,\r\n  withUnreadMessages,\r\n  whatsappIds,\r\n  statusFilter,\r\n  forceSearch,\r\n  userFilter,\r\n  sortTickets,\r\n  searchOnMessages\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [tickets, setTickets] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const delayDebounceFn = setTimeout(() => {\r\n      const fetchTickets = async () => {\r\n        if (userFilter === undefined || userFilter === null) {\r\n          try {            \r\n            const { data } = await api.get(\"/tickets\", {\r\n              params: {\r\n                searchParam,\r\n                pageNumber,\r\n                tags,\r\n                users,\r\n                status,\r\n                date,\r\n                updatedAt,\r\n                showAll,\r\n                queueIds,\r\n                withUnreadMessages,\r\n                whatsapps: whatsappIds,\r\n                statusFilter,\r\n                sortTickets,\r\n                searchOnMessages\r\n              },\r\n            });\r\n            \r\n            let tickets = [];\r\n            \r\n            tickets = data.tickets;\r\n          \r\n            setTickets(tickets);\r\n            setHasMore(data.hasMore);\r\n            setCount(data.count)\r\n            setLoading(false);\r\n          } catch (err) {\r\n            setLoading(false);\r\n            toastError(err);\r\n          }\r\n        } else {\r\n          try {\r\n            const {data} = await api.get(\"/dashboard/moments\", {\r\n              params: {\r\n                status,\r\n                showAll,\r\n                queueIds,\r\n                dateStart: format(sub(new Date(), { days: 30 }), 'yyyy-MM-dd'),\r\n                dateEnd: format(new Date(), 'yyyy-MM-dd'),\r\n                userId: userFilter\r\n              }\r\n            })\r\n            let tickets = [];\r\n            tickets = data.filter(item => item.userId == userFilter);            \r\n\r\n            setTickets(tickets);\r\n            setHasMore(null);\r\n            setLoading(false);\r\n          } catch (err) {\r\n            setLoading(false);\r\n            toastError(err);\r\n          }\r\n        }\r\n      };\r\n    fetchTickets();\r\n    }, 500);\r\n    return () => clearTimeout(delayDebounceFn);\r\n  }, [\r\n    searchParam,\r\n    tags,\r\n    users,\r\n    pageNumber,\r\n    status,\r\n    date,\r\n    updatedAt,\r\n    showAll,\r\n    queueIds,\r\n    withUnreadMessages,\r\n    whatsappIds,\r\n    statusFilter,\r\n    forceSearch,\r\n    sortTickets,\r\n    searchOnMessages\r\n  ]);\r\n\r\n  return { tickets, loading, hasMore, count };\r\n};\r\n\r\nexport default useTickets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}